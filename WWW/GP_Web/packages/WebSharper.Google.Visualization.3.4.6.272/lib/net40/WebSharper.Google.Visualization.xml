<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>WebSharper.Google.Visualization</name></assembly>
<members>
<member name="T:WebSharper.Google.Visualization.AggregationTarget.None">
<summary>
 Show only one tooltip per selection.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.AggregationTarget.Auto">
<summary>
 Group selected data by x-value if all selections have the same x-value, and by series otherwise.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.AggregationTarget.Series">
<summary>
 Group selected data by series.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.AggregationTarget.Category">
<summary>
 Group selected data by x-value.
</summary>
</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Animation.easing">
<summary>
 The easing function applied to the animation. 
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Animation.duration">
<summary>
 The duration of the animation, in milliseconds. For details, see the animation documentation.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.AreaChart">
<summary>
 An area chart that is rendered within the browser using SVG or VML. 
 Displays tips when clicking on points. Animates lines when clicking 
 on legend entries. 
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.AreaChartOptions.vAxes">
<summary>
 Specifies properties for individual vertical axes, if the
 chart has multiple vertical axes. Each child object is a vAxis
 object, and can contain all the properties supported by vAxis.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.AreaChartOptions.pointSize">
<summary>
 Size of displayed points in pixels. Use zero to hide all points.
 Default Value: 3
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.AreaChartOptions.lineWidth">
<summary>
 Line width in pixels. Use zero to hide all lines and show only the points.
 Default Value: 2
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.AreaChartOptions.isStacked">
<summary>
 If set to true, line values are stacked (accumulated).
 Default Value: false
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.AreaChartOptions.areaOpacity">
<summary>
 The default opacity of the colored area under an area chart
 series, where 0.0 is fully transparent and 1.0 is fully
 opaque. To specify opacity for an individual series, set the
 areaOpacity value in the series property.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Axis.showTextEvery">
<summary>
 How many horizontal axis labels to show, where 1 means show every label, 2 means show every other label, and so on. Default is to try to show as many labels as possible without overlapping.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Axis.maxAlternation">
<summary>
 Maximum number of levels of horizontal axis text. If axis text labels become too crowded, the server might shift neighboring labels up or down in order to fit labels closer together. This value specifies the most number of levels to use; the server can use fewer levels, if labels can fit without overlapping.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Axis.slantedTextAngle">
<summary>
 The angle of the horizontal axis text, if it&apos;s drawn slanted. Ignored if hAxis.slantedText is false, or is in auto mode, and the chart decided to draw the text horizontally.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Axis.slantedText">
<summary>
 If true, draw the horizontal axis text at an angle, to help fit more text along the axis; if false, draw horizontal axis text upright. Default behavior is to slant text if it cannot all fit when drawn upright.
</summary>
</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Axis.title">
<summary>
 hAxis property that specifies the title of the horizontal axis.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Axis.textStyle">
<summary>
 An object that specifies the horizontal axis text style. The object has this format:
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Axis.direction">
<summary>
 The direction in which the values along the horizontal axis grow. Specify -1 to reverse the order of the values.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Bar.groupWidth">
<summary>
 The width of a group of bars, specified in either of these formats:
     * Pixels (e.g. 50).
     * Percentage of the available width for each group (e.g. &apos;20%&apos;),
       where &apos;100%&apos; means that groups have no space between them.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.BarChart">
<summary>
 A horizontal bar chart that is rendered within the browser using 
 SVG or VML. Displays tips when clicking on points. Animates lines
 when clicking on legend entries. For a vertical version of this 
 chart, see the Column Chart.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.BarChartOptions.isStacked">
<summary>
 If set to true, line values are stacked (accumulated).
 Default Value: false
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.BubbleChart">
<summary>
 A bubble chart that is rendered within the browser using SVG or
 VML. Displays tips when hovering over bubbles. A bubble chart is
 used to visualize a data set with 2 to 4 dimensions. The first two
 dimensions are visualized as coordinates, the 3rd as color and the
 4th as size.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.CandlestickChart">
<summary>
 An interactive candlestick chart. A candlestick chart is used to
 show an opening and closing value overlaid on top of a total
 variance. Candlestick charts are often used to show stock value
 behavior. In this chart, items where the opening value is less
 than the closing value (a gain) are drawn as filled boxes, and
 items where the opening value is more than the closing value (a
 loss) are drawn as hollow boxes.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.ColorAxisLegend.numberFormat">
<summary>
 A format string for numeric labels. This is a subset of the
 ICU pattern set. For instance, {numberFormat:&apos;.##&apos;} will
 display values &quot;10.66&quot;, &quot;10.6&quot;, and &quot;10.0&quot; for values 10.666,
 10.6, and 10.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.ColumnChart">
<summary>
 A vertical bar chart that is rendered within the browser using SVG or VML. 
 Displays tips when clicking on points. Animates lines when clicking on legend
 entries. For a horizontal version of this chart, see the Bar Chart.
</summary>
</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.ColumnChartOptions.isStacked">
<summary>
 If set to true, line values are stacked (accumulated).
 Default Value: false
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.ComboChart">
<summary>
 A chart that lets you render each series as a different marker
 type from the following list: line, area, bars, candlesticks and
 stepped area. To assign a default marker type for series, specify
 the seriesType property. Use the series property to specify
 properties of each series individually.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.ComboChartOptions.isStacked">
<summary>
 If set to true, line values are stacked (accumulated).
 Default Value: false
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Easing.InAndOut">
<summary>
 Ease in and out - Start slow, speed up, then slow down.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Easing.Out">
<summary>
 Ease out - Start fast and slow down.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Easing.In">
<summary>
 Ease in - Start slow and speed up.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Easing.Linear">
<summary>
 Constant speed.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.FocusTarget.Category">
<summary>
 Focus on a grouping of all data points along the major axis. Correlates to a row in the data table.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.FocusTarget.Datum">
<summary>
 Focus on a single data point. Correlates to a cell in the data table.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Gauge">
<summary>
 One or more gauges are rendered within the browser using SVG or VML. 
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.yellowTo">
<summary>
 The highest value for a range marked by a yellow color.

 Default Value: none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.yellowFrom">
<summary>
 The lowest value for a range marked by a yellow color.

 Default Value: none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.width">
<summary>
 Width of the chart in pixels.
 Default Value: Container&apos;s width
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.redTo">
<summary>
 The highest value for a range marked by a red color.

 Default Value: none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.redFrom">
<summary>
 The lowest value for a range marked by a red color.

 Default Value: none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.minorTicks">
<summary>
 The number of minor tick section in each major tick section.

 Default Value: 2
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.min">
<summary>
 The minimal value of a gauge.

 Default Value: 0
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.max">
<summary>
 The maximal value of a gauge.

 Default Value: 100
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.majorTicks">
<summary>
 Labels for major tick marks. The number of labels define the number of
 major ticks in all gauges. The default is five major ticks, with the
 labels of the minimal and maximal gauge value.

 Default Value: none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.height">
<summary>
 Height of the chart in pixels.
 Default Value: Container&apos;s width
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.greenTo">
<summary>
 The highest value for a range marked by a green color.

 Default Value: none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.GaugeOptions.greenFrom">
<summary>
 The lowest value for a range marked by a green color.

 Default Value: none
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.IMRegion">
<summary>
 Dummy type for the possible regions. 
 the IM prefix stands for Intensity map because the geomap already
 uses the &quot;Region&quot; name.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.IntensityMap.setSelection(System.Object)">
<summary>
 Standard setSelection() implementation. Supports only selection of a single column. 
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.IntensityMap.getSelection">
<summary>
 Standard getSelection() implementation. Supports only selection of a single column.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.IntensityMap.draw(WebSharper.Google.Visualization.Base.DataCommon,WebSharper.Google.Visualization.IntensityMapOptions)">
<summary>
 Draws the chart. You can speed up response time for the second and later calls to
 draw() by using the allowRedraw property.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.IntensityMap">
<summary>
 An intensity map that highlights regions or countries based on relative values 
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.IntensityMapOptions.width">
<summary>
 Width of the map in pixels.&lt;br/&gt;
 Note: The maximum width of the visualization is 440.

 Default Value: 440
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.IntensityMapOptions.showOneTab">
<summary>
 The intensity map can display one or more numeric columns.
 Each column is displayed as a separate map, and tabs on top enable selection
 of which map to show.
 When the data table contains only one numeric column,
 the tabs are not displayed.
 To display tabs even for a single numeric column, set this option to true.

 Default Value: false
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.IntensityMapOptions.region">
<summary>
 The required region. Possible values are:
 &apos;world&apos;, &apos;africa&apos;, &apos;asia&apos;, &apos;europe&apos;, &apos;middle_east&apos;, &apos;south_america&apos;, and
 &apos;usa&apos;.

 Default Value: &apos;world&apos;
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.IntensityMapOptions.height">
 <p>Height of the map in pixels.
 The maximum height of the visualization is 220.</p>
 <p>Note that this height assumes a one-row tab. If your tab text is long, it
 will wrap the tab to multiple lines, and the extra lines will exceed the
 specified height.</p>
 Default Value: 220
</member>
<member name="F:WebSharper.Google.Visualization.IntensityMapOptions.colors">
<summary>
 The colors to use for each tab.
 An array of strings. Each element is a string in the format #rrggbb.
 For example &apos;#00cc00&apos;.

 Default Value: Default colors
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.LineChart">
<summary>
 A line chart that is rendered within the browser using SVG or VML. Displays 
 tips when clicking on points. Animates lines when clicking on legend entries. 
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.MotionChart.getState">
<summary>
 Returns the current state of the motionchart, serialized to a JSON string. To assign
 this state to the chart, assign this string to the state option in the draw() method. 
 This is often used to specify a custom chart state on startup, instead of using the 
 default state.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.MotionChart.draw(WebSharper.Google.Visualization.Base.DataCommon,WebSharper.Google.Visualization.MotionChartOptions)">
<summary>
 Draws the chart. You can speed up response time for the second and later calls to
 draw() by using the allowRedraw property.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.MotionChart">
<summary>
 A dynamic chart to explore several indicators over time. The chart is rendered within 
 the browser using Flash.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showAdvancedPanel">
<summary>
 false disables the options compartment in the settings panel.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showYScalePicker">
<summary>
 false hides the scale picker for y.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showXScalePicker">
<summary>
 false hides the scale picker for x.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showYMetricPicker">
<summary>
 false hides the metric picker for y.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showXMetricPicker">
<summary>
 false hides the metric picker for x.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showSidePanel">
<summary>
 false hides the right hand panel.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.showSelectListComponent">
<summary>
 false hides the list of visible entities.
 Default Value: true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.state">
<summary>
 An initial display state for the chart. This is a serialized JSON object
 that describes zoom level, selected dimensions, selected bubbles/entities,
 and other state descriptions. See &lt;a href=&quot;#Motion_Chart_initial_state&quot;&gt;Setting
 Initial State&lt;/a&gt; to
 learn how to set this.
 Default Value: &lt;em&gt;none&lt;/em&gt;
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.width">
<summary>
 Width of the chart in pixels.
 Default Value: 500
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.MotionChartOptions.height">
<summary>
 Height of the chart in pixels.
 Default Value: 300
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.OrgChart.setSelection(System.Object)">
<summary>
 Standard setSelection() implementation, but can only select
 entire rows, or multiple rows. The row indexes in the selection
 object refer to the original data table regardless of any user
 interaction (sort, paging, etc.).
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.OrgChart.getCollapsedNodes">
<summary>
 Returns an array with the list of the collapsed node&apos;s indexes.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.OrgChart.getSelection">
<summary>
 Standard getSelection implementation. Selection elements are
 all row elements. Can return more than one selected row. The row
 indexes in the selection object refer to the original data table
 regardless of any user interaction (sort, paging, etc.).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.OrgChart.getChildrenIndexes(System.Double)">
<summary>
 Returns an array with the indexes of the children of the given node.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.OrgChart.draw(WebSharper.Google.Visualization.Base.DataCommon,WebSharper.Google.Visualization.OrgChartOptions)">
<summary>
 Draws the chart. You can speed up response time for the second and later calls to
 draw() by using the allowRedraw property.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.OrgChart.collapse(System.Double,System.Boolean)">
<summary>
 Collapses or expands the node.
 * row - Index of the row to expand or collapse.
 * collapsed Whether to collapse or expand the row, where true means collapse.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.OrgChart">
<summary>
 A line chart that is rendered within the browser using SVG or VML. Displays 
 tips when clicking on points. Animates lines when clicking on legend entries. 
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.PieChart">
<summary>
 A line chart that is rendered within the browser using SVG or VML. Displays 
 tips when clicking on points. Animates lines when clicking on legend entries. 
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Query.setTimeout(System.Int32)">
<summary>
 Sets the number of seconds to wait for the data source to respond before raising a timeout error. seconds is a number greater than zero. 
 The default timeout is 30 seconds. This method, if used, should be called before calling the send method.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Query.setRefreshInterval(System.Int32)">
<summary>
 Sets the query to automatically call the send method every specified duration (number of seconds), starting from the first explicit call to send. seconds is a number greater than or equal to zero.
 If you use this method, you should call it before calling the send method.
 Cancel this method either by calling it again with zero (the default), or by calling abort().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Query.setQuery(System.String)">
<summary>
 Sets the query string. The value of the string parameter should be a valid query. 
 This method, if used, should be called before calling the send method. Learn more about the Query language at https://developers.google.com/chart/interactive/docs/querylanguage
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Query.send(Microsoft.FSharp.Core.FSharpFunc{WebSharper.Google.Visualization.QueryResponse,Microsoft.FSharp.Core.Unit})">
<summary>
 Sends the query to the data source. callback should be a function that will be called when the data source responds.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Query.abort">
<summary>
 Stops the automated query sending that was started with setRefreshInterval().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Query.#ctor(System.String)">
 <param name="dataSourceUrl">
 [Required, String] URL to send the query to. The data source should expose this URL in some way; for example, to get the dataSourceUrl from a Google Spreadsheet, do the following:
     1. In your spreadsheet, select the range of cells.
     2. Select 'Insert' and then 'Gadget' from the menu.
     3. Open the gadget's menu by clicking on the top-right selector.
     4. Select menu option 'Get data source URL'.
 </param>
</member>
<member name="M:WebSharper.Google.Visualization.Query.#ctor(System.String,WebSharper.Google.Visualization.QueryOptions)">
 <param name="dataSourceUrl">
 [Required, String] URL to send the query to. The data source should expose this URL in some way; for example, to get the dataSourceUrl from a Google Spreadsheet, do the following:
     1. In your spreadsheet, select the range of cells.
     2. Select 'Insert' and then 'Gadget' from the menu.
     3. Open the gadget's menu by clicking on the top-right selector.
     4. Select menu option 'Get data source URL'.
 </param>
 <param name="options">
 [Optional, Object] A map of options for the request. Note: If you are accessing a restricted data source, you should not use this parameter.
 </param>
</member>
<member name="T:WebSharper.Google.Visualization.Query">
<summary>
 Represents a query that is sent to a data source.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QueryErrorReason.Timeout">
<summary>
 The query did not respond within the expected time.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QueryErrorReason.DataTruncated">
<summary>
 One or more data rows that match the query selection were not returned due to output size limits. (warning).
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QueryErrorReason.InvalidQuery">
<summary>
 The specified query has a syntax error.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QueryErrorReason.AccessDenied">
<summary>
 The user does not have permissions to access the data source.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.QueryResponse.isError">
<summary>
 Returns true if the query execution failed, and the response does not contain any data table. Returns &lt;false&gt; if the query execution was successful and the response contains a data table.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.QueryResponse.hasWarning">
<summary>
 Returns true if the query execution has any warning messages.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.QueryResponse.getReasons">
<summary>
 Returns an array of zero of more entries. Each entry is a short string with an error or warning code that was raised while executing the query.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.QueryResponse.getMessages">
<summary>
 Returns a short error message for queries that failed. If the query execution was successful, this method returns an empty string. The message returned is a short message that is intended for end users, for example &apos;Invalid Query&apos; or &apos;Access Denied&apos;.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.QueryResponse.getDetailedMessage">
<summary>
 Returns a detailed error message for queries that failed. If the query execution was successful, this method returns an empty string. The message returned is a message that is intended for developers, and may contain technical information, for example &apos;Column {salary} does not exist&apos;.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.QueryResponse.getDataTable">
<summary>
 Returns the data table as returned by the data source. Returns null if the query execution failed and no data was returned.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.QuerySendMethod.Auto">
<summary>
 Use the method specified by the tqrt URL parameter from the data source URL. tqrt can have the following values: &apos;xhr&apos;, &apos;scriptInjection&apos;, or &apos;makeRequest&apos;. If tqrt is missing or has an invalid value, the default is &apos;xhr&apos; for same-domain requests and &apos;scriptInjection&apos; for cross-domain requests.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QuerySendMethod.MakeRequest">
<summary>
  [Available only for gadgets] Send the query using the Gadget API  makeRequest() method. If specified, you should also specify makeRequestParams.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QuerySendMethod.ScriptInjection">
<summary>
 Send the query using script injection.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.QuerySendMethod.Xhr">
<summary>
 Send the query using XmlHttpRequest.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Region">
<summary>
 Dummy type to simulate the region enumeration.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.ScatterChart">
<summary>
 A line chart that is rendered within the browser using SVG or VML. Displays 
 tips when clicking on points. Animates lines when clicking on legend entries. 
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:WebSharper.Google.Visualization.Selection.column">
<summary>
 Index of the column. If null, the selection is a row.
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Selection.row">
<summary>
 Index of the row. If null, the selection is a column.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Series.targetAxisIndex">
<summary>
 Which axis to assign this series to, where 0 is the default axis, and 1 is the opposite axis. Default value is 0; set to 1 to define a chart where different series are rendered against different axes. At least one series much be allocated to the default axis. You can define a different scale for different axes.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.SteppedAreaChart">
<summary>
 A stepped area chart that is rendered within the browser using SVG
 or VML. Displays tips when hovering over steps.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Table.setSelection(System.Object)">
<summary>
 Standard setSelection() implementation, but can only select
 entire rows, or multiple rows. The row indexes in the selection
 object refer to the original data table regardless of any user
 interaction (sort, paging, etc.).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Table.getSortInfo">
<summary>
 Call this method to retrieve information about the current
 sort state of a table that has been sorted (typically by the
 user, who has clicked on a column heading to sort the rows by a
 specific column).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Table.getSelection">
<summary>
 Standard getSelection implementation. Selection elements are
 all row elements. Can return more than one selected row. The row
 indexes in the selection object refer to the original data table
 regardless of any user interaction (sort, paging, etc.).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Table.draw(WebSharper.Google.Visualization.Base.DataCommon,WebSharper.Google.Visualization.TableOptions)">
<summary>
 Draws the table.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.rowNumberCell">
<summary>
 Assigns a class name to the cells in the row number column
 element). Note: the showRowNumber option must be set to true.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.tableCell">
<summary>
 Assigns a class name to all non-header table cells (&lt;td&gt; element).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.headerCell">
<summary>
 Assigns a class name to all cells in the header row (&lt;td&gt; element).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.hoverTableRow">
<summary>
 Assigns a class name to the hovered table row (&lt;tr&gt; element).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.selectedTableRow">
<summary>
 Assigns a class name to the selected table row (&lt;tr&gt; element).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.oddTableRow">
<summary>
 Assigns a class name to odd table rows (&lt;tr&gt; elements). Note: the
 alternatingRowStyle option must be set to true. 
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.tableRow">
<summary>
 Assigns a class name to the non-header rows (&lt;tr&gt; elements).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableCSSClasses.headerRow">
<summary>
 Assigns a class name to the table header row (&lt;tr&gt; element).
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.TableCSSClasses">
<summary>
 Wrapper to set the css classes of the table.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.width">
<summary>
 Sets the width of the visualization&apos;s container element. You can use standard HTML
 units (for example, &apos;100px&apos;, &apos;80em&apos;, &apos;60&apos;). If no units are specified the number is
 assumed to be pixels. If not specified, the browser will set the width automatically
 to fit the table; if set smaller than the size required by the table, will add a
 horizontal scroll bar. Default automatic
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.startPage">
<summary>
 The first table page to display. Used only if page is in mode enable/event. Default 0
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.sortColumn">
<summary>
 An index of a column in the data table, by which the table is initially sorted. The
 column will be marked with a small arrow indicating the sort order. Default none
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.sortAscending">
<summary>
 The order in which the initial sort column is sorted. True for ascending, false for
 descending. Ignored if sortColumn is not specified. Default true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.sort">
<summary>
 If and how to sort columns when the user clicks a column heading. If sorting is
 enabled, consider setting the sortAscending and sortColumn properties as well. Choose
 one of the following string values:
 
     * &apos;enable&apos; - [Default] Users can click on column headers to sort by the clicked
       column. When users click on the column header, the rows will be automatically
       sorted, and a &apos;sort&apos; event will be triggered.
     * &apos;event&apos; - When users click on the column header, a &apos;sort&apos; event will be
       triggered, but the rows will not be automatically sorted. This option should be
       used when the page implements its own sort. See the TableQueryWrapper example
       for an example of how to handle sorting events manually.
     * &apos;disable&apos; - Clicking a column header has no effect.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.showRowNumber">
<summary>
 If set to true, shows the row number as the first column of the table. Default false
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.scrollLeftStartPosition">
<summary>
 Sets the horizontal scrolling position, in pixels, if the table has horizontal scroll
 bars because you have set the width property. The table will open scrolled that many
 pixels past the leftmost column. T Default 0
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.rtlTable">
<summary>
 Adds basic support for right-to-left languages (such as Arabic or Hebrew) by
 reversing the column order of the table, so that column zero is the rightmost column,
 and the last column is the leftmost column. This does not affect the column index in
 the underlying data, only the order of display. Full bi-directional (BiDi) language
 display is not supported by the table visualization even with this option. This
 option will be ignored if you enable paging (using the page option), or if the table
 has scroll bars because you have specified height and width options smaller than the
 required table size. Default false
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.pageSize">
<summary>
 The number of rows in each page, when paging is enabled with the page option. Default
 10
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.page">
<summary>
 If and how to enable paging through the data. Choose one of the following string
 values:
     * &apos;enable&apos; - The table will include page-forward and page-back buttons. Clicking
       on these buttons will perform the paging operation and change the displayed
       page. You might want to also set the pageSize option.
     * &apos;event&apos; - The table will include page-forward and page-back buttons, but
       clicking them will trigger a &apos;page&apos; event and will not change the displayed
       page. This option should be used when the code implements its own page turning
       logic. See the TableQueryWrapper example for an example of how to handle paging
       events manually.
     * &apos;disable&apos; - [Default] Paging is not supported.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.height">
<summary>
 Sets the height of the visualization&apos;s container element. You can use standard HTML
 units (for example, &apos;100px&apos;, &apos;80em&apos;, &apos;60&apos;). If no units are specified the number is
 assumed to be pixels. If not specified, the browser will set the width automatically
 to fit the table; if set smaller than the size required by the table, will add a
 vertical scroll bar. Default automatic
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.firstRowNumber">
<summary>
 The row number for the first row in the dataTable. Used only if showRowNumber is
 true. Default 1
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.cssClassNames">
<summary>
 An object in which each property name describes a table element, and the property
 value is a string, defining a class to assign to that table element. Use this
 property to assign custom CSS to specific elements of your table. To use this
 property, assign an object, where the property name specifies the table element, and
 the property value is a string, specifying a class name to assign to that
 element. You must then define a CSS style for that class on your page. The following
 property names are supported:
 
     * headerRow - Assigns a class name to the table header row (&lt;tr&gt; element).
     * tableRow - Assigns a class name to the non-header rows (&lt;tr&gt; elements).
     * oddTableRow - Assigns a class name to odd table rows (&lt;tr&gt; elements). Note: the
       alternatingRowStyle option must be set to true.
     * selectedTableRow - Assigns a class name to the selected table row (&lt;tr&gt; element).
     * hoverTableRow - Assigns a class name to the hovered table row (&lt;tr&gt; element).
     * headerCell - Assigns a class name to all cells in the header row (&lt;td&gt; element).
     * tableCell - Assigns a class name to all non-header table cells (&lt;td&gt; element).
     * rowNumberCell - Assigns a class name to the cells in the row number column
       (&lt;td&gt; element). Note: the showRowNumber option must be set to true.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.alternatingRowStyle">
<summary>
 Determines if alternating color style will be assigned to odd and even rows. Default
 true
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TableOptions.allowHtml">
<summary>
 If set to true, formatted values of cells that include HTML tags will be rendered as
 HTML. If set to false, most custom formatters will not work properly. Default false
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Timeline.draw(WebSharper.Google.Visualization.Base.DataCommon,WebSharper.Google.Visualization.TimelineOptions)">
<summary>
 Draws the timeline.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.TitlePosition.None">
<summary>
 Omit the title.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.TitlePosition.Out">
<summary>
 Draw the title outside the chart area.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.TitlePosition.In">
<summary>
 Draw the title inside the the chart area.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.TreeMap.setSelection(System.Object)">
<summary>
 Standard setSelection() implementation, but can only select
 entire rows, or multiple rows. The row indexes in the selection
 object refer to the original data table regardless of any user
 interaction (sort, paging, etc.).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.TreeMap.goUpAndDraw">
<summary>
 Move up the tree by one level and redraw it. Does not throw an 
 error if the node is the root node. This is fired automatically 
 when the user right-clicks a node.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.TreeMap.getSelection">
<summary>
 Standard getSelection implementation. Selection elements are
 all row elements. Can return more than one selected row. The row
 indexes in the selection object refer to the original data table
 regardless of any user interaction (sort, paging, etc.).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.TreeMap.getMaxPossibleDepth">
<summary>
 Returns the maximum possible depth for the current view.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.TreeMap.draw(WebSharper.Google.Visualization.Base.DataCommon,WebSharper.Google.Visualization.TreeMapOptions)">
<summary>
 Draws the chart. You can speed up response time for the second and later calls to
 draw() by using the allowRedraw property.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.TreeMap">
<summary>
 A visual representation of a data tree, where each node can have zero or more children, and one parent (except for the root, which has no parents). Each node is displayed as a rectangle, sized and colored according to values that you assign. Sizes and colors are valued relative to all other nodes in the graph. You can specify how many levels to display simultaneously, and optionally to display deeper levels in a hinted fashion. If a node is a leaf node, you can specify a size and color; if it is not a leaf, it will be displayed as a bounding box for leaf nodes. The default behavior is to move down the tree when a user left-clicks a node, and to move back up the tree when a user right-clicks the graph.
 The total size of the graph is determined by the size of the containing element that you insert in your page. If you have leaf nodes with names too long to show, the name will be truncated with an ellipsis (...).
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.showTooltips">
<summary>
 Whether or not to show tooltips.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.showScale">
<summary>
 Whether or not to show a color gradient scale from minColor to maxColor along the top of the chart. Specify true to show the scale.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.noHighlightColor">
<summary>
 The color to use for a rectangle of &quot;no&quot; color when highlighted. This will be the value of noColor lightened by 35%. Specify an HTML value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.noColor">
<summary>
 The color to use for a rectangle when a node has no value for column 3, and that node is a leaf (or contains only leaves). Specify an HTML color value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.minColorValue">
<summary>
 The minimum value allowed in column 3. All values less than this will be trimmed to this value. If set to null or &apos;auto&apos;, it will be calculated as the minimum value in the column.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.minHighlightColor">
<summary>
 The highlight color to use for the node with a column 3 value nearest to minColorValue. Specify an HTML color value or &apos;auto&apos;. If null or &apos;auto&apos;, this value will be the value of minColor lightened by 35%
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.minColor">
<summary>
 The color for a rectangle with the column 3 value of minColorValue. Specify an HTML color value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.midHighlightColor">
<summary>
 The highlight color to use for the node with a column 3 value near the median of minColorValue and maxColorValue. Specify an HTML color value or &apos;auto&apos;. If null or &apos;auto&apos;, this value will be the value of midColor lightened by 35%.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.midColor">
<summary>
 The color for a rectangle with a column 3 value midway between maxColorValue and minColorValue. Specify an HTML color value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.maxColorValue">
<summary>
 The maximum value allowed in column 3. All values greater than this will be trimmed to this value. If set to null or &apos;auto&apos;, it will be set to the max value in the column.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.maxPostDepth">
<summary>
 How many levels of nodes beyond maxDepth to show in &quot;hinted&quot; fashion. Hinted nodes are shown as shaded rectangles within a node that is within the maxDepth limit.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.maxHighlightColor">
<summary>
 The highlight color to use for the node with the largest value in column 3. Specify an HTML color value, null, or &apos;auto. If null or &apos;auto&apos;, this value will be the value of maxColor lightened by 35%
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.maxDepth">
<summary>
 The maximum number of node levels to show in the current view. Levels will be flattened into the current plane. If your tree has more levels than this, you will have to go up or down to see them. You can additionally see maxPostDepth levels below this as shaded rectangles within these nodes.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.maxColor">
<summary>
 The color for a rectangle with a column 3 value of maxColorValue. Specify an HTML color value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.hintOpacity">
<summary>
 When maxPostDepth is greater than 1, causing nodes below the current depth to be shown, hintOpacity specifies how transparent it should be. It should be between 0 and 1; the higher the value, the fainter the node.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.headerHighlightColor">
<summary>
 The color of the header of a node being hovered over. Specify an HTML color value, null, or &apos;auto; if null or &apos;auto&apos;, this value will be headerColor lightened by 35%
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.headerHeight">
<summary>
 The height of the header section for each node, in pixels (can be zero).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.headerColor">
<summary>
 The color of the header section for each node. Specify an HTML color value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.fontSize">
<summary>
 The font size for all text, in points.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.fontFamily">
<summary>
 The font family to use for all text.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.TreeMapOptions.fontColor">
<summary>
 The text color. Specify an HTML color value.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.setSelection(WebSharper.Google.Visualization.Selection[])">
<summary>
 Selects a data entry in the visualization—for example, a point in an area chart, or a bar in a bar chart. When this method is called, the visualization should visually indicate what the new selection is. The implementation of setSelection() should not fire a &quot;select&quot; event. Visualizations may ignore part of the selection. For example, a table that can show only selected rows may ignore cell or column elements in its setSelection() implementation, or it can select the entire row.

 Every time this method is called, all selected items are deselected, and the new selection list passed in should be applied. There is no explicit way to deselect individual items; to deselect individual items, call setSelection() with the items to remain selected; to deselect all elements, call setSelection(), setSelection(null), or setSelection([]).
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.getYLocation(System.Int32,System.Int32)">
<summary>
 Returns the screen y-coordinate of position relative to the chart&apos;s container.
 Call this after the chart is drawn.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.getXLocation(System.Int32,System.Int32)">
<summary>
 Returns the screen x-coordinate of position relative to the chart&apos;s container.
 Call this after the chart is drawn.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.getVAxisValue(System.Int32,System.Int32)">
<summary>
 Returns the logical vertical value at position, which is an offset from the chart container&apos;s top edge.
 Call this after the chart is drawn.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.getSelection">
<summary>
 Returns an array of the selected chart entities. Selectable entities are points, annotations,
 legend entries and categories. A point or annotation correlates to a cell in the data table,
 a legend entry to a column (row index is null), and a category to a row (column index is null).
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.getHAxisValue(System.Int32,System.Int32)">
<summary>
 Returns the logical horizontal value at position, which is an offset from the chart container&apos;s left edge. Can be negative.
 Call this after the chart is drawn.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.draw(WebSharper.Google.Visualization.Base.DataCommon,`0)">
<summary>
 Draws the chart. The chart accepts further method calls only after the ready event is fired.
 Extended description at https://developers.google.com/chart/interactive/docs/reference#visdraw
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.ChartCommon`1.clearChart">
<summary>
 Clears the chart, and releases all of its allocated resources.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Base.ChartOptionsCommon.reverseCategories">
<summary>
 If set to true, will draw categories from right to left. The default is to draw left-to-right.
 Default Value: false
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.toJSON">
<summary>
 Returns a string representation of this DataView. This string does not contain the
 actual data; it only contains the DataView-specific settings such as visible rows and
 columns. You can store this string and pass it to the static DataView.fromJSON()
 constructor to recreate this view. This won&apos;t include generated columns.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.setRows(System.Int32[])">
<summary>
 Sets the visible rows in this view, based on index numbers from the underlying
 table/view. rowIndexes should be an array of index numbers specifying which rows to
 show in the view. The array specifies the order in which to show the rows, and rows
 can be duplicated. Note that only the rows specified in rowIndexes will be shown;
 this method clears all other rows from the view. The array can also contain
 duplicates, effectively duplicating the specified row in this view (for example,
 setRows([3, 4, 3, 2]) will cause row 3 to appear twice in this view). The array thus
 provides a mapping of the rows from the underlying table/view to this view. You can
 use getFilteredRows() or getSortedRows() to generate input for this method.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.setRows(System.Int32,System.Int32)">
<summary>
 Sets the rows in this view to be all indexes (in the underlying table/view) that lie
 between min and max (inclusive). This is a convenience syntax for setRows(rowIndexes)
 above. For example, setRows(5, 10) is equivalent to setRows([5, 6, 7, 8, 9, 10]).
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.setColumns(System.Int32[])">
<summary>
 Specifies which columns are visible in this view. Any columns not specified will be
 hidden. This is an array of column indexes in the underlying table/view, or
 calculated columns. If you don&apos;t call this method, the default is to show all
 columns. The array can also contain duplicates, to show the same column multiple
 times. Columns will be shown in the order specified.
 
     * columnIndexes - An array of numbers and/or objects. Numbers are column index
       values in the underlying table/view. Objects are descriptions of a calculated
       column. A calculated column creates a value on the fly for each row and adds it
       to the view. The object must have the following properties:
           o calc [function] - A function that takes two values, the DataTable that
           the view is built on, and the number of the row being generated, and
           returns a single value of type type described below. The function signature
           is func(dataTable, row), where dataTable is the source DataTable, and row is
           the index of the source data row. The function should return a single value
           of the type specified by type.
           o type [string] - The JavaScript type of the value that the calc function
           returns.
           o label [Optional, string] - An optional label to assign to this generated
           column.
           o id [Optional, string] - An optional ID to assign to this generated
           column.
           o sourceColumn - [Optional, number] The source column to use as a value; if
           specified, do not specify the calc or the type property. This is similar to
           passing in a number instead of an object, but enables you to specify a role
           and properties for the new column.
           o properties [Optional, object] - An object containing any arbitrary properties
           to assign to this column. If not specified, the view column will have no properties.
           o role [Optional, string] - A role to assign to this column. If not specified,
           the existing role will not be imported.
 
 // Column 1 is a value in centimeters, and the third column is
 // a generated column that converts this into inches.
 view.setColumns([0,1,{calc:myFunc, type:&apos;number&apos;, label:&apos;Height in Inches&apos;}]);
 function myFunc(dataTable, rowNum){
   return Math.floor(dataTable.getValue(rowNum, 1) / 2.54);
 }
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.hideRows(System.Int32[])">
<summary>
 Hides the specified rows from the current view. rowIndexes is an array of numbers
 representing the indexes of the rows to hide. These indexes are the index numbers in
 the underlying table/view. The numbers in rowIndexes do not have to be in order (that
 is, [3,4,1] is fine). The remaining rows retain their index order. Entering an index
 number for a row already hidden is not an error, but entering an index that does not
 exist in the underlying table/view will throw an error. To unhide rows, call
 setRows().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.hideRows(System.Int32,System.Int32)">
<summary>
 Hides all rows with indexes that lie between min and max (inclusive) from the current
 view. This is a convenience syntax for hideRows(rowIndexes) above. For example,
 hideRows(5, 10) is equivalent to hideRows([5, 6, 7, 8, 9, 10]).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.hideColumns(System.Int32[])">
<summary>
 Hides the specified columns from the current view. columnIndexes is an array of
 numbers representing the indexes of the columns to hide. These indexes are the index
 numbers in the underlying table/view. The numbers in columnIndexes do not have to be
 in order (that is, [3,4,1] is fine). The remaining columns retain their index order
 when you iterate through them. Entering an index number for a column already hidden
 is not an error, but entering an index that does not exist in the underlying
 table/view will throw an error. To unhide columns, call setColumns().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.getViewRows">
<summary>
 Returns the rows in this view, in order. That is, if you call setRows with some
 array, and then call getViewRows() you should get an identical array.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.getViewRowIndex(System.Int32)">
<summary>
 Returns the index in this view that maps to a given row specified by its index in the
 underlying table (or view). If more than one such index exists, returns the first
 (smallest) one. If no such index exists (the specified row is not in the view),
 returns -1. tableRowIndex should be a number greater than or equal to zero, and less
 than the number of rows as returned by the getNumberOfRows() method of the underlying
 table/view.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.getViewColumns">
<summary>
 Returns the columns in this view, in order. That is, if you call setColumns with some
 array, and then call getViewColumns() you should get an identical array.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.getViewColumnIndex(System.Int32)">
<summary>
 Returns the index in this view that maps to a given column specified by its index in
 the underlying table (or view). If more than one such index exists, returns the first
 (smallest) one. If no such index exists (the specified column is not in the view),
 returns -1. tableColumnIndex should be a number greater than or equal to zero, and
 less than the number of columns as returned by the getNumberOfColumns() method of the
 underlying table/view.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.getTableRowIndex(System.Int32)">
<summary>
 Returns the index in the underlying table (or view) of a given row specified by its
 index in this view. viewRowIndex should be a number greater than or equal to zero,
 and less than the number of rows as returned by the getNumberOfRows() method.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataView.getTableColumnIndex(System.Int32)">
<summary>
 Returns the index in the underlying table (or view) of a given column specified by
 its index in this view. viewColumnIndex should be a number greater than or equal to
 zero, and less than the number of columns as returned by the getNumberOfColumns()
 method. Returns -1 if this is a generated column.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.toJSON">
<summary>
 Returns a JSON representation of the DataTable that can be passed into the DataTable
 constructor.  Format of the Constructor&apos;s JavaScript Literal data Parameter
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.sort(System.Int32)">
<summary>
 Sorts the rows, according to the specified sort columns. The DataTable is modified by
 this method. See getSortedRows() for a description of the sorting details. This
 method does not return the sorted data.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setValue(System.Int32,System.Int32,System.Object)">
<summary>
 Sets the value of a cell. In addition to overwriting any existing cell value, this
 method will also clear out any formatted value and properties for the cell.
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method. This method
       does not let you set a formatted value for this cell; to do that, call
       setFormattedValue().
 
     * value is the value assigned to the specified cell. The type of the returned
       value depends on the column type (see getColumnType):
 
           o If the column type is &apos;string&apos;, the value should be a string.
           o If the column type is &apos;number&apos;, the value should be a number.
           o If the column type is &apos;boolean&apos;, the value should be a boolean.
           o If the column type is &apos;date&apos; or &apos;datetime&apos;, the value should be a Date object.
           o If the column type is &apos;timeofday&apos;, the value should be an array of four
           numbers: [hour, minute, second, millisenconds].
           o For any column type, the value can be set to null.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setTableProperty(System.String,System.Object)">
<summary>
 Sets a single table property. Some visualizations support table, row, column, or cell
 properties to modify their display or behavior; see the visualization documentation
 to see what properties are supported.
 
     * name is a string with the property name.
     * value is a value of any type to assign to the specified named property of the table.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setTableProperties(System.Object)">
<summary>
 Sets multiple table table. Some visualizations support table, row, column, or cell
 properties to modify their display or behavior; see the visualization documentation
 to see what properties are supported.
 
     * properties is an Object (name/value map) with additional properties for the
       table. If null is specified, all additional properties of the table will be
       removed.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setRowProperty(System.Int32,System.String,System.Object)">
<summary>
 Sets a row property. Some visualizations support row, column, or cell properties to
 modify their display or behavior; see the visualization documentation to see what
 properties are supported.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * name is a string with the property name.
 
     * value is a value of any type to assign to the specified named property of the
       specified row.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setRowProperties(System.Int32,System.Object)">
<summary>
 Sets multiple row properties. Some visualizations support row, column, or cell
 properties to modify their display or behavior; see the visualization documentation
 to see what properties are supported.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * properties is an Object (name/value map) with additional properties for this
       row. If null is specified, all additional properties of the row will be
       removed.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setProperty(System.Int32,System.Int32,System.String,System.Object)">
<summary>
 Sets a cell property. Some visualizations support row, column, or cell properties to
 modify their display or behavior; see the visualization documentation to see what
 properties are supported.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * name is a string with the property name.
 
     * value is a value of any type to assign to the specified named property of the
       specified cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setProperties(System.Int32,System.Int32,System.Object)">
<summary>
 Sets multiple cell properties. Some visualizations support row, column, or cell
 properties to modify their display or behavior; see the visualization documentation
 to see what properties are supported.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * properties is an Object (name/value map) with additional properties for this
       cell. If null is specified, all additional properties of the cell will be
       removed.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setFormattedValue(System.Int32,System.Int32,System.String)">
<summary>
 Sets the formatted value of a cell.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * formattedValue is a string with the value formatted for display. To clear this
       value and have the API apply default formatting to the cell value as needed,
       set it formattedValue null; to explicitly set an empty formatted value, set it
       to an empty string.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setColumnProperty(System.Int32,System.String,System.Object)">
<summary>
 Sets a single column property. Some visualizations support row, column, or cell
 properties to modify their display or behavior; see the visualization documentation
 to see what properties are supported.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
     * name is a string with the property name.
     * value is a value of any type to assign to the specified named property of the
       specified column.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setColumnProperties(System.Int32,System.Object)">
<summary>
 Sets multiple column properties. Some visualizations support row, column, or cell
 properties to modify their display or behavior; see the visualization documentation
 to see what properties are supported.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * properties is an Object (name/value map) with additional properties for this
       column. If null is specified, all additional properties of the column will be
       removed.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setColumnLabel(System.Int32,System.String)">
<summary>
 Sets the label of a column.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * label is a string with the label to assign to the column. The column label is
       typically displayed as part of the visualization. For example the column label
       can be displayed as a column header in a table, or as the legend label in a pie
       chart.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setCell(System.Int32,System.Int32,System.Object,System.String,System.Object)">
<summary>
 Ibid
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setCell(System.Int32,System.Int32,System.Object,System.String)">
<summary>
 Ibid
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setCell(System.Int32,System.Int32,System.Object)">
<summary>
 Ibid
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.setCell(System.Int32,System.Int32)">
<summary>
 Sets the value, formatted value, and/or properties, of a cell.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * value [Optional] is the value assigned to the specified cell. To avoid
       overwriting this value, set this parameter to undefined; to clear this value,
       set it to null. The type of the value depends on the column type (see
       getColumnType()):
 
           o If the column type is &apos;string&apos;, the value should be a string.
           o If the column type is &apos;number&apos;, the value should be a number.
           o If the column type is &apos;boolean&apos;, the value should be a boolean.
           o If the column type is &apos;date&apos; or &apos;datetime&apos;, the value should be a Date object.
 
           o If the column type is &apos;timeofday&apos;, the value should be an array of four
             numbers: [hour, minute, second, millisenconds].
 
     * formattedValue [Optional] is a string with the value formatted as a string. To
     avoid overwriting this value, set this parameter to undefined; to clear this
     value and have the API apply default formatting to value as needed, set it to
     null; to explicitly set an empty formatted value, set it to an empty string. The
     formatted value is typically used by visualizations to display value labels. For
     example the formatted value can appear as a label text within a pie chart.
 
     * properties [Optional] is an Object (a name/value map) with additional
       properties for this cell. To avoid overwriting this value, set this parameter
       to undefined; to clear this value, set it to null. Some visualizations support
       row, column, or cell properties to modify their display or behavior; see the
       visualization documentation to see what properties are supported.
 
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.removeRows(System.Int32,System.Int32)">
<summary>
 Removes the specified number of rows starting from the row at the specified index.
 
     * numberOfRows is the number of rows to remove.
     * rowIndex should be a number with a valid row index.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.removeRow(System.Int32)">
<summary>
 Removes the row at the specified index.
 
     * rowIndex should be a number with a valid row index.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.removeColumns(System.Int32,System.Int32)">
<summary>
 Removes the specified number of columns starting from the column at the specified index.
 
     * numberOfColumns is the number of columns to remove.
     * columnIndex should be a number with a valid column index.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.removeColumn(System.Int32)">
<summary>
 Removes the column at the specified index.
 
     * columnIndex should be a number with a valid column index.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.insertRows(System.Int32,WebSharper.Google.Visualization.Base.Cell[])">
<summary>
 Insert the specified number of rows at the specified row index.
 
     * rowIndex is the index number where to insert the new row(s). Rows will be
       added, starting at the index number specified.
 
     * numberOrArray is either a number of new, empty rows to add, or an array of one
       or more populated rows to add at the index. See addRows() for the syntax for
       adding an array of row objects.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.insertRows(System.Int32,System.Int32)">
<summary>
 Insert the specified number of rows at the specified row index.
 
     * rowIndex is the index number where to insert the new row(s). Rows will be
       added, starting at the index number specified.
 
     * numberOrArray is either a number of new, empty rows to add, or an array of one
       or more populated rows to add at the index. See addRows() for the syntax for
       adding an array of row objects.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.insertColumn(System.Int32,WebSharper.Google.Visualization.Base.ColumnType,System.String,System.String)">
<summary>
 Inserts a new column to the data table, at the specifid index. All existing columns
 at or after the specified index are shifted to a higher index.
     * columnIndex is a number with the required index of the new column.
     * type should be a string with the data type of the values of the column. The
       type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos; &apos;date&apos; &apos;datetime&apos;
       &apos;timeofday&apos;.
     * label should be a string with the label of the column. The column label is
       typically displayed as part of the visualization, for example as a column
       header in a table, or as a legend label in a pie chart. If no value is
       specified, an empty string is assigned.
     * id should be a string with a unique identifier for the column. If no value is
       specified, an empty string is assigned.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.insertColumn(System.Int32,System.String,System.String)">
<summary>
 Inserts a new column to the data table, at the specifid index. All existing columns
 at or after the specified index are shifted to a higher index.
     * columnIndex is a number with the required index of the new column.
     * type should be a string with the data type of the values of the column. The
       type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos; &apos;date&apos; &apos;datetime&apos;
       &apos;timeofday&apos;.
     * label should be a string with the label of the column. The column label is
       typically displayed as part of the visualization, for example as a column
       header in a table, or as a legend label in a pie chart. If no value is
       specified, an empty string is assigned.
     * id should be a string with a unique identifier for the column. If no value is
       specified, an empty string is assigned.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.insertColumn(System.Int32,System.String)">
<summary>
 Inserts a new column to the data table, at the specifid index. All existing columns
 at or after the specified index are shifted to a higher index.
     * columnIndex is a number with the required index of the new column.
     * type should be a string with the data type of the values of the column. The
       type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos; &apos;date&apos; &apos;datetime&apos;
       &apos;timeofday&apos;.
     * label should be a string with the label of the column. The column label is
       typically displayed as part of the visualization, for example as a column
       header in a table, or as a legend label in a pie chart. If no value is
       specified, an empty string is assigned.
     * id should be a string with a unique identifier for the column. If no value is
       specified, an empty string is assigned.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.getTableProperties">
<summary>
 Returns a map of all properties for the table.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.getRowProperties(System.Int32)">
<summary>
 Returns a map of all properties for the specified row. Note that the properties
 object is returned by reference, so changing values in the retrieved object changes
 them in the DataTable.
 
     * rowIndex is the index of the row to retrieve properties for.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.getColumnProperties``1(``0)">
<summary>
 Returns a map of all properties for the specified column. Note that the properties
 object is returned by reference, so changing values in the retrieved object changes
 them in the DataTable.
 
     * columnIndex is the numeric index of the column to retrieve properties for.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.clone">
<summary>
 Returns a clone of the data table. The result is a deep copy of the data table except
 for the cell properties, row properties, table properties and column properties,
 which are shallow copies; this means that non-primitive properties are copied by
 reference, but primitive properties are copied by value
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addRows``1(``0[])">
<summary>
 Adds new rows to the data table, and returns the index of the last added row. You can
 call this method to create new empty rows, or with data used to populate the rows, as
 described below.
           o Array - An array of row objects used to populate a set of new rows. Each
           row should be a tuple with one field for each column. Use undefined for an empty cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addRows(WebSharper.Google.Visualization.Base.Cell[][])">
<summary>
 Adds new rows to the data table, and returns the index of the last added row. You can
 call this method to create new empty rows, or with data used to populate the rows, as
 described below.
           o Array - An array of row objects used to populate a set of new rows. Each
           row is an object as described in addRow(). Use null or an empty array entry
           for an empty cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addRows(System.Int32)">
<summary>
 Adds new rows to the data table, and returns the index of the last added row. You can
 call this method to create new empty rows, or with data used to populate the rows, as
 described below.
           o Number - A number specifying how many new, unpopulated rows to add.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addRow(WebSharper.Google.Visualization.Base.Cell[])">
<summary>
 Adds a new row to the data table, and returns the index of the new row.
     * opt_cellArray [optional] A row object, in JavaScript notation, specifying the
       data for the new row. If this parameter is not included, this method will
       simply add a new, empty row to the end of the table. This parameter is an array
       of cell values: if you only want to specify a value for a cell, just give the
       cell value (e.g., 55, &apos;hello&apos;); if you want to specify a formatted value and/or
       properties for the cell, you will have to use a cell objects (e.g., {v:55,
       f:&apos;Fifty-five&apos;, p:&apos;USD&apos;}). You can mix simple values and cell objects in the
       same method call). Use null or an empty array entry for an empty cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addRow">
<summary>
 Adds a new row to the data table, and returns the index of the new row.
     * opt_cellArray [optional] A row object, in JavaScript notation, specifying the
       data for the new row. If this parameter is not included, this method will
       simply add a new, empty row to the end of the table. This parameter is an array
       of cell values: if you only want to specify a value for a cell, just give the
       cell value (e.g., 55, &apos;hello&apos;); if you want to specify a formatted value and/or
       properties for the cell, you will have to use a cell objects (e.g., {v:55,
       f:&apos;Fifty-five&apos;, p:&apos;USD&apos;}). You can mix simple values and cell objects in the
       same method call). Use null or an empty array entry for an empty cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addColumn(WebSharper.Google.Visualization.Base.ColumnDescription)">
<summary>
 Adds a new column to the data table, and returns the index of the new column. All the
 cells of the new column are assigned a null value. It has a single object parameter with the following members:

     * type - A string describing the column data type. Same values as type above.
     * label - [Optional, string] A label for the column.
     * id - [Optional, string] An ID for the column.
     * role - [Optional, string] A role for the column.
     * pattern - [Optional, string] A number (or date) format string specifying how to display the column value.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addColumn(WebSharper.Google.Visualization.Base.ColumnType,System.String,System.String)">
<summary>
 Adds a new column to the data table, and returns the index of the new column. All the
 cells of the new column are assigned a null value.
 
     * type should be a string with the data type of the values of the column. The
       type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos; &apos;date&apos; &apos;datetime&apos;
       &apos;timeofday&apos;.  
     * label should be a string with the label of the column. The column label is 
       typically displayed as part of the visualization, for example as a column header 
       in a table, or as a legend label in a pie chart. If not value is specified, an 
       empty string is assigned.  
     * id should be a string with a unique identifier for the column. If not value is 
       specified, an empty string is assigned.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addColumn(WebSharper.Google.Visualization.Base.ColumnType,System.String)">
<summary>
 Adds a new column to the data table, and returns the index of the new column. All the
 cells of the new column are assigned a null value.
 
     * type should be a string with the data type of the values of the column. The
       type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos; &apos;date&apos; &apos;datetime&apos;
       &apos;timeofday&apos;.  
     * label should be a string with the label of the column. The column label is 
       typically displayed as part of the visualization, for example as a column header 
       in a table, or as a legend label in a pie chart. If not value is specified, an 
       empty string is assigned.  
     * id should be a string with a unique identifier for the column. If not value is 
       specified, an empty string is assigned.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.addColumn(WebSharper.Google.Visualization.Base.ColumnType)">
<summary>
 Adds a new column to the data table, and returns the index of the new column. All the
 cells of the new column are assigned a null value.
 
     * type should be a string with the data type of the values of the column. The
       type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos; &apos;date&apos; &apos;datetime&apos;
       &apos;timeofday&apos;.  
     * label should be a string with the label of the column. The column label is 
       typically displayed as part of the visualization, for example as a column header 
       in a table, or as a legend label in a pie chart. If not value is specified, an 
       empty string is assigned.  
     * id should be a string with a unique identifier for the column. If not value is 
       specified, an empty string is assigned.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.#ctor(System.String,System.Double)">
<summary>
 Creates a DataTable populated with the data that you pass in. You can see an example
 of this below.
 
 Parameters
 
 data
 
     [Required] Data used to initialize the table. This can either be the JSON
 returned by calling DataTable.toJSON() on a populated table, or a JavaScript object
 containing data used to initialize the table. The structure of the JavaScript literal
 object is described here.  version
 
     [Required] A numeric value specifying the version of the wire protocol used. The
     current version is 0.6.
 
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataTable.#ctor">
<summary>
 Creates an empty DataTable instance. Use JavaScript to populate the DataTable as
 shown in the following example, which creates and populates a two column, three row
 DataTable in JavaScript. You might use this on a page hosting a visualization to
 create the data for that visualization.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.DataTable">
<summary>
 Represents a two-dimensional, mutable table of values. To make a read-only copy of a
 DataTable (optionally filtered to show specific values, rows, or columns), create a
 DataView.
 Each column is assigned a data type, plus several optional properties including an
 ID, label, and pattern string.
 In addition, you can assign custom properties (name/value pairs) to any cell, row,
 column, or the entire table. Some visualizations support specific custom properties;
 for example the Table visualization supports a cell property called &apos;style&apos;, which
 lets you assign an inline CSS style string to the rendered table cell. A
 visualization should describe in its documentation any custom properties that it
 supports.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getValue(System.Double,System.Double)">
<summary>
 Returns the value of the cell at the given row and column indexes.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
 The type of the returned value depends on the column type (see getColumnType):
 
     * If the column type is &apos;string&apos;, the value is a string.
     * If the column type is &apos;number&apos;, the value is a number.
     * If the column type is &apos;boolean&apos;, the value is a boolean.
     * If the column type is &apos;date&apos; or &apos;datetime&apos;, the value is a Date object.
     * If the column type is &apos;timeofday&apos;, the value is an array of four numbers:
       [hour, minute, second, millisenconds].
     * If the column value is a null value, regardless of the column type, the
       returned value is null.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getTableProperty(System.String)">
<summary>
 Returns the value of a named property, or null if no such property is set for the
 table. The return type varies, depending on the property.
 
     * name is a string with the property name.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getSortedRows(System.Int32)">
<summary>
 Returns a sorted version of the table without modifying the order of the underlying
 data. To permanently sort the underlying data, call sort(). You can specify sorting
 in a number of ways, depending on the type you pass in to the sortColumns parameter:
 
     * A single number specifies the index of the column to sort by. Sorting will be
       in ascending order.
 
     * A single object that contains the number of the column index to sort by, and an
       optional boolean property desc. If desc is set to true, the specific column
       will be sorted in descending order; otherwise, sorting is in ascending order.
 
     * An array of numbers of the column indexes by which to sort. The first number is
       the primary column by which to sort, the second one is the secondary, and so
       on. This means that when two values in the first column are equal, the values
       in the next column are compared, and so on.
 
     * An array of objects, each one with the number of the column index to sort by,
       and an optional boolean property desc. If desc is set to true, the specific
       column will be sorted in descending order (the default is ascending order). The
       first object is the primary column by which to sort, the second one is the
       secondary, and so on. This means that when two values in the first column are
       equal, the values in the next column are compared, and so on.
 
 The returned value is an array of numbers, each number is an index of a DataTable
 row. Iterating on the DataTable rows by the order of the returned array will result
 in rows ordered by the specified sortColumns. The output can be used as input to
 DataView.setRows() to quickly change the displayed set of rows in a visualization.
 
 Note that the sorting is guaranteed to be stable: this means that if you sort on
 equal values of two rows, the same sort will return the rows in the same order every
 time.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getRowProperty(System.Int32,System.String)">
<summary>
 Returns the value of a named property, or null if no such property is set for the
 specified row. The return type varies, depending on the property.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * name is a string with the property name.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getProperty(System.Int32,System.Int32,System.String)">
<summary>
 Returns the value of a named property, or null if no such property is set for the
 specified cell. The return type varies, depending on the property.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
     * name is a string with the property name.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getProperties(System.Int32,System.Int32)">
<summary>
 Returns a map of all the properties for the specified cell. Note that the properties
 object is returned by reference, so changing values in the retrieved object changes
 them in the DataTable.
 
     * rowIndex is the cell&apos;s row index.
     * columnIndex is the cell&apos;s column index.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getNumberOfRows">
<summary>
 Returns the number of rows in the table.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getNumberOfColumns">
<summary>
 Returns the number of columns in the table
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getFormattedValue(System.Int32,System.Int32)">
<summary>
 Returns the formatted value of the cell at the given row and column indexes.
 
     * rowIndex should be a number greater than or equal to zero, and less than the
       number of rows as returned by the getNumberOfRows() method.
 
     * ColumnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getFilteredRows(System.Object[])">
<summary>
 Returns the row indexes for rows that match all of the given filters. The indexes
 are returned in ascending order. The output of this method can be used as input to
 DataView.setRows() to change the displayed set of rows in a visualization.
 
 filters - An array of objects that describe an acceptable cell value. A row index is
 returned by this method if it matches all of the given filters. Each filter is an
 object with a numeric column property that specifies the index of the column in the
 row to assess, plus one of the following:
 
     * A value property with a value that must be matched exactly by the cell in the
       specified column. The value must be the same type as the column; or
 
     * One or both of the following properties, the same type as the column being
       filtered:
 
           o minValue - A minimum value for the cell. The cell value in the specified
           column must be greater than or equal to this value.
           o maxValue - A maximum value for the cell. The cell value in the specified
           column must be less than or equal to this value.
 
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getDistinctValues(System.Int32)">
<summary>
 Returns the unique values in a certain column, in ascending order.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
 The type of the returned objects is the same as that returned by the getValue method.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnType(System.Int32)">
<summary>
 Returns the type of a given column specified by the column index.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
 The returned column type can be one of the following: &apos;string&apos; &apos;number&apos; &apos;boolean&apos;
 &apos;date&apos; &apos;datetime&apos; &apos;timeofday&apos;
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnRole(System.Int32)">
<summary>
 Returns the role of the specified column.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnRange(System.Int32)">
<summary>
 Returns the minimal and maximal values of values in a specified column. The returned
 object has properties min and max. If the range has no values, min and max will
 contain null.
 
 columnIndex should be a number greater than or equal to zero, and less than the
 number of columns as returned by the getNumberOfColumns() method.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnProperty(System.Int32,System.String)">
<summary>
 Returns the value of a named property, or null if no such property is set for the
 specified column. The return type varies, depending on the property.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.  
     * name is the property name, as a string.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnPattern``1(``0)">
<summary>
 Returns the formatting pattern used to format the values of the specified column.
 
     * columnIndex should be a number greater than or equal to zero, and less than the
       number of columns as returned by the getNumberOfColumns() method.
 
 For data tables that are retrieved by queries, The column pattern is set by the data
 source, or by the format clause of the query language. An example of a pattern is
 &apos;#,##0.00&apos;. For more on patterns see the query language reference.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnLabel``1(``0)">
<summary>
 Returns the label of a given column specified by the column index in the underlying
 table.  The column label is typically displayed as part of the visualization. For
 example the column label can be displayed as a column header in a table, or as the
 legend label in a pie chart.  For data tables that are retrieved by queries, the
 column label is set by the data source, or by the label clause of the query language.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Base.DataCommon.getColumnId(System.Int32)">
<summary>
 Returns the identifier of a given column specified by the column index in the
 underlying table For data tables that are retrieved by queries, the column identifier
 is set by the data source, and can be used to refer to columns when using the query
 language.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Base.DataCommon">
<summary>
 Dummy type that contains common functions of DataTable and DataView
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Base.SortType">
<summary>
 Wrap for sorting the views.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnDescription">
<summary>
 Column description
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Data">
<summary>
 Data role columns specify series data to render in the chart. For most charts, one column = one series, but this can vary by chart type (for example, scatter charts require two data columns for the first series, and an additional one for each additional series; candlestick charts require four data columns for each series).
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Domain">
<summary>
 Domain columns specify labels along the major axis of the chart. Multiple domain columns can sometimes be used to support multiple scales within the same chart.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Tooltip">
<summary>
 Text to display when the user hovers over the data point associated with this row.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Scope">
<summary>
 Indicates whether a point is in or out of scope. If a point is out of scope, it is visually de-emphasized.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Interval">
<summary>
 Indicates potential data range for a specific point. Intervals are usually displayed as I-bar style range indicators. Interval columns are numeric columns; add interval columns in pairs, marking the low and high value of the bar. Interval values should be added in increasing value, from left to right.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Emphasis">
<summary>
 Emphasizes specified chart data points. Displayed as a thick line and/or large point.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Certainty">
<summary>
 Indicates whether a data point is certain or not. How this is displayed depends on the chart type—for example, it might be indicated by dashed lines or a striped fill.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.AnnotationText">
<summary>
 Extended text to display when the user hovers over the associated annotation. Annotations and annotation text can be assigned to both data points and categories (axis labels). If you have an annotationText column, you must also have an annotation column. Tooltip text, in contrast, is displayed when the user hovers over the associated data point on the chart.
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole.Annotation">
<summary>
 Text to display on the chart near the associated data point. The text displays without any user interaction. Annotations and annotation text can be assigned to both data points and categories (axis labels).
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Base.ColumnRole">
<summary>
 Column role
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Base.Cell.p">
<summary>
 An object that is a map of custom values applied to the cell. These values can be
 of any JavaScript type. If your visualization supports any cell-level properties, 
 it will describe them; otherwise, this property will be ignored. 
 Example: p:{style: &apos;border: 1px solid green;&apos;}.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Base.Cell.f">
<summary>
 A string version of the v value, formatted for display. The values should match,
 so if you specify Date(2008, 0, 1) for v, you should specify &quot;January 1, 2008&quot; 
 or some such string for this property. This value is not checked against the v 
 value. The visualization will not use this value for calculation, only as a label
 for display. If omitted, a string version of v will be used.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Base.Cell.v">
<summary>
 The cell value. The data type should match the column data type. 
 If null, the whole object should be empty and have neither v nor f properties.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Base.Cell">
<summary>
 Cell wrap        
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ZW">
<summary>
 Zimbabwe
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ZM">
<summary>
 Zambia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.YE">
<summary>
 Yemen
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.EH">
<summary>
 Western Sahara
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.WF">
<summary>
 Wallis and Futuna
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VI">
<summary>
 Virgin Islands, U.S
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VG">
<summary>
 Virgin Islands, British
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VN">
<summary>
 Viet Nam
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VE">
<summary>
 Venezuela, Bolivarian Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VU">
<summary>
 Vanuatu
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.UZ">
<summary>
 Uzbekistan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.UY">
<summary>
 Uruguay
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.UM">
<summary>
 United States Minor Outlying Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.US">
<summary>
 United States
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GB">
<summary>
 United Kingdom
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AE">
<summary>
 United Arab Emirates
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.UA">
<summary>
 Ukraine
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.UG">
<summary>
 Uganda
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TV">
<summary>
 Tuvalu
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TC">
<summary>
 Turks and Caicos Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TM">
<summary>
 Turkmenistan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TR">
<summary>
 Turkey
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TN">
<summary>
 Tunisia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TT">
<summary>
 Trinidad and Tobago
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TO">
<summary>
 Tonga
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TK">
<summary>
 Tokelau
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TG">
<summary>
 Togo
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TL">
<summary>
 Timor-Leste
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TH">
<summary>
 Thailand
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TZ">
<summary>
 Tanzania, United Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TJ">
<summary>
 Tajikistan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TW">
<summary>
 Taiwan, Province of China
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SY">
<summary>
 Syrian Arab Republic
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CH">
<summary>
 Switzerland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SE">
<summary>
 Sweden
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SZ">
<summary>
 Swaziland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SJ">
<summary>
 Svalbard and Jan Mayen
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SR">
<summary>
 Suriname
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SD">
<summary>
 Sudan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LK">
<summary>
 Sri Lanka
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ES">
<summary>
 Spain
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GS">
<summary>
 South Georgia and the South Sandwich Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ZA">
<summary>
 South Africa
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SO">
<summary>
 Somalia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SB">
<summary>
 Solomon Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SI">
<summary>
 Slovenia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SK">
<summary>
 Slovakia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SG">
<summary>
 Singapore
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SL">
<summary>
 Sierra Leone
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SC">
<summary>
 Seychelles
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.RS">
<summary>
 Serbia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SN">
<summary>
 Senegal
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SA">
<summary>
 Saudi Arabia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ST">
<summary>
 Sao Tome and Principe
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SM">
<summary>
 San Marino
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.WS">
<summary>
 Samoa
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VC">
<summary>
 Saint Vincent and the Grenadines
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PM">
<summary>
 Saint Pierre and Miquelon
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MF">
<summary>
 Saint Martin (French part)
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LC">
<summary>
 Saint Lucia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KN">
<summary>
 Saint Kitts and Nevis
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SH">
<summary>
 Saint Helena
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BL">
<summary>
 Saint Barthélemy
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.RW">
<summary>
 Rwanda
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.RU">
<summary>
 Russian Federation
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.RO">
<summary>
 Romania
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.RE">
<summary>
 Reunion ﻿ Réunion
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.QA">
<summary>
 Qatar
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PR">
<summary>
 Puerto Rico
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PT">
<summary>
 Portugal
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PL">
<summary>
 Poland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PN">
<summary>
 Pitcairn
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PH">
<summary>
 Philippines
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PE">
<summary>
 Peru
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PY">
<summary>
 Paraguay
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PG">
<summary>
 Papua New Guinea
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PA">
<summary>
 Panama
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PS">
<summary>
 Palestinian Territory, Occupied
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PW">
<summary>
 Palau
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PK">
<summary>
 Pakistan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.OM">
<summary>
 Oman
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NO">
<summary>
 Norway
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MP">
<summary>
 Northern Mariana Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NF">
<summary>
 Norfolk Island
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NU">
<summary>
 Niue
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NG">
<summary>
 Nigeria
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NE">
<summary>
 Niger
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NI">
<summary>
 Nicaragua
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NZ">
<summary>
 New Zealand
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NC">
<summary>
 New Caledonia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AN">
<summary>
 Netherlands Antilles
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NL">
<summary>
 Netherlands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NP">
<summary>
 Nepal
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NR">
<summary>
 Nauru
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.NA">
<summary>
 Namibia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MM">
<summary>
 Myanmar
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MZ">
<summary>
 Mozambique
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MA">
<summary>
 Morocco
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MS">
<summary>
 Montserrat
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ME">
<summary>
 Montenegro
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MN">
<summary>
 Mongolia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MC">
<summary>
 Monaco
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MD">
<summary>
 Moldova, Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.FM">
<summary>
 Micronesia, Federated States of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MX">
<summary>
 Mexico
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.YT">
<summary>
 Mayotte
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MU">
<summary>
 Mauritius
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MR">
<summary>
 Mauritania
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MQ">
<summary>
 Martinique
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MH">
<summary>
 Marshall Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MT">
<summary>
 Malta
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ML">
<summary>
 Mali
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MV">
<summary>
 Maldives
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MY">
<summary>
 Malaysia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MW">
<summary>
 Malawi
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MG">
<summary>
 Madagascar
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MK">
<summary>
 Macedonia, the former Yugoslav Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.MO">
<summary>
 Macao
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LU">
<summary>
 Luxembourg
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LT">
<summary>
 Lithuania
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LI">
<summary>
 Liechtenstein
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LY">
<summary>
 Libyan Arab Jamahiriya
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LR">
<summary>
 Liberia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LS">
<summary>
 Lesotho
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LB">
<summary>
 Lebanon
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LV">
<summary>
 Latvia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.LA">
<summary>
 Lao People&apos;s Democratic Republic
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KG">
<summary>
 Kyrgyzstan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KW">
<summary>
 Kuwait
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KR">
<summary>
 Korea, Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KP">
<summary>
 Korea, Democratic People&apos;s Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KI">
<summary>
 Kiribati
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KE">
<summary>
 Kenya
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KZ">
<summary>
 Kazakhstan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.JO">
<summary>
 Jordan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.JE">
<summary>
 Jersey
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.JP">
<summary>
 Japan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.JM">
<summary>
 Jamaica
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IT">
<summary>
 Italy
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IL">
<summary>
 Israel
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IM">
<summary>
 Isle of Man
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IE">
<summary>
 Ireland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IQ">
<summary>
 Iraq
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IR">
<summary>
 Iran, Islamic Republic of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ID">
<summary>
 Indonesia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IN">
<summary>
 India
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IS">
<summary>
 Iceland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.HU">
<summary>
 Hungary
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.HK">
<summary>
 Hong Kong
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.HN">
<summary>
 Honduras
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.VA">
<summary>
 Holy See (Vatican City State
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.HM">
<summary>
 Heard Island and McDonald Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.HT">
<summary>
 Haiti
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GY">
<summary>
 Guyana
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GW">
<summary>
 Guinea-Bissau
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GN">
<summary>
 Guinea
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GG">
<summary>
 Guernsey
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GT">
<summary>
 Guatemala
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GU">
<summary>
 Guam
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GP">
<summary>
 Guadeloupe
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GD">
<summary>
 Grenada
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GL">
<summary>
 Greenland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GR">
<summary>
 Greece
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GI">
<summary>
 Gibraltar
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GH">
<summary>
 Ghana
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.DE">
<summary>
 Germany
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GE">
<summary>
 Georgia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GM">
<summary>
 Gambia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GA">
<summary>
 Gabon
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TF">
<summary>
 French Southern Territories
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.PF">
<summary>
 French Polynesia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GF">
<summary>
 French Guiana
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.FR">
<summary>
 France
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.FI">
<summary>
 Finland
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.FJ">
<summary>
 Fiji
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.FO">
<summary>
 Faroe Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.FK">
<summary>
 Falkland Islands (Malvinas
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ET">
<summary>
 Ethiopia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.EE">
<summary>
 Estonia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.ER">
<summary>
 Eritrea
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.GQ">
<summary>
 Equatorial Guinea
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.SV">
<summary>
 El Salvador
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.EG">
<summary>
 Egypt
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.EC">
<summary>
 Ecuador
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.DO">
<summary>
 Dominican Republic
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.DM">
<summary>
 Dominica
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.DJ">
<summary>
 Djibouti
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.DK">
<summary>
 Denmark
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CZ">
<summary>
 Czech Republic
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CY">
<summary>
 Cyprus
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CU">
<summary>
 Cuba
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.HR">
<summary>
 Croatia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CI">
<summary>
 Cote d&apos;Ivoire ﻿ Côte d&apos;Ivoire
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CR">
<summary>
 Costa Rica
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CK">
<summary>
 Cook Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CD">
<summary>
 Congo, the Democratic Republic of the
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CG">
<summary>
 Congo
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KM">
<summary>
 Comoros
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CO">
<summary>
 Colombia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CC">
<summary>
 Cocos (Keeling) Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CX">
<summary>
 Christmas Island
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CN">
<summary>
 China
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CL">
<summary>
 Chile
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.TD">
<summary>
 Chad
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CF">
<summary>
 Central African Republic
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KY">
<summary>
 Cayman Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CV">
<summary>
 Cape Verde
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CA">
<summary>
 Canada
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.CM">
<summary>
 Cameroon
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.KH">
<summary>
 Cambodia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BI">
<summary>
 Burundi
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BF">
<summary>
 Burkina Faso
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BG">
<summary>
 Bulgaria
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BN">
<summary>
 Brunei Darussalam
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.IO">
<summary>
 British Indian Ocean Territory
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BR">
<summary>
 Brazil
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BV">
<summary>
 Bouvet Island
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BW">
<summary>
 Botswana
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BA">
<summary>
 Bosnia and Herzegovina
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BO">
<summary>
 Bolivia, Plurinational State of
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BT">
<summary>
 Bhutan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BM">
<summary>
 Bermuda
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BJ">
<summary>
 Benin
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BZ">
<summary>
 Belize
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BE">
<summary>
 Belgium
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BY">
<summary>
 Belarus
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BB">
<summary>
 Barbados
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BD">
<summary>
 Bangladesh
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BH">
<summary>
 Bahrain
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.BS">
<summary>
 Bahamas
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AZ">
<summary>
 Azerbaijan
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AT">
<summary>
 Austria
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AU">
<summary>
 Australia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AW">
<summary>
 Aruba
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AM">
<summary>
 Armenia
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AR">
<summary>
 Argentina
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AG">
<summary>
 Antigua and Barbuda
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AQ">
<summary>
 Antarctica
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AI">
<summary>
 Anguilla
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AO">
<summary>
 Angola
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AD">
<summary>
 Andorra
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AS">
<summary>
 American Samoa
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.DZ">
<summary>
 Algeria
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AL">
<summary>
 Albania
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AX">
<summary>
 Aland Islands ﻿ Åland Islands
</summary>
</member>
<member name="P:WebSharper.Google.Visualization.Countries.Alpha2Codes.AF">
<summary>
 Afghanistan
</summary>
</member>
<member name="T:WebSharper.Google.Visualization.Countries.Alpha2Codes">

</member>
<member name="T:WebSharper.Google.Visualization.Countries">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Dependencies.JsApi">
<summary>
 Requires the Google JS API.
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Dependencies">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Enumerations">

</member>
<member name="M:WebSharper.Google.Visualization.Events.TreeMap.Select(WebSharper.Google.Visualization.TreeMap)">
<summary>
 Standard select event, but only entire rows can be selected.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.TreeMap.Ready(WebSharper.Google.Visualization.TreeMap)">
<summary>
 The chart is ready for external method calls. If you want to interact with the chart,
 and call methods after you draw it, you should set up a listener for this event before
 you call the draw method, and call them only after the event was fired.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.TreeMap.OnMouseOver(WebSharper.Google.Visualization.TreeMap)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.TreeMap.OnMouseOut(WebSharper.Google.Visualization.TreeMap)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.Table.Sort(WebSharper.Google.Visualization.Table)">
<summary>
 Triggered when users click on a column header, and the sort option is not &apos;disable&apos;.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.Table.Select(WebSharper.Google.Visualization.Table)">
<summary>
 Standard select event, but only entire rows can be selected.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.Table.Ready(WebSharper.Google.Visualization.Table)">
<summary>
 The chart is ready for external method calls. If you want to interact with the chart,
 and call methods after you draw it, you should set up a listener for this event before
 you call the draw method, and call them only after the event was fired.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.Table.Page(WebSharper.Google.Visualization.Table)">
<summary>
 Triggered when users click on a page navigation button.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.OrgChart.Select(WebSharper.Google.Visualization.OrgChart)">
<summary>
 Standard select event
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.OrgChart.Ready(WebSharper.Google.Visualization.OrgChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener for this event before you call the draw method, and call the methods only after the event is fired. 	
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.OrgChart.OnMouseOver(WebSharper.Google.Visualization.OrgChart)">
<summary>
 Triggered when the user hovers over a specific row.  row - The zero-based index of
 the row in the data table, corresponding to the node being moused over.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.OrgChart.OnMouseOut(WebSharper.Google.Visualization.OrgChart)">
<summary>
 Triggered when the user hovers out of a row.  row - The zero-based index of the row
 in the data table, corresponding to the node being moused out from.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.OrgChart.Collapse(WebSharper.Google.Visualization.OrgChart)">
<summary>
 Event triggered when allowCollapse is set to true and the user double clicks on a
 node with children.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.MotionChart.StateChange(WebSharper.Google.Visualization.MotionChart)">
<summary>
 The user has interacted with the chart in some way. Call getState() to learn the
 current state of the chart.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.MotionChart.Ready(WebSharper.Google.Visualization.MotionChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with the chart,
 and call methods after you draw it, you should set up a listener for this event
 before you call the draw method, and call them only after the event was fired.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.IntensityMap.Select(WebSharper.Google.Visualization.IntensityMap)">
<summary>
 Standard select event
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.IntensityMap.Ready(WebSharper.Google.Visualization.IntensityMap)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call the methods only 
 after the event was fired 	None
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.ScatterChart.Select(WebSharper.Google.Visualization.ScatterChart)">
<summary>
 Fired when the user clicks a point or legend. When a point is selected, the 
 corresponding cell in the data table is selected; when a legend is selected, 
 the corresponding column in the data table is selected. To learn what has 
 been selected, call getSelection().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.ScatterChart.Ready(WebSharper.Google.Visualization.ScatterChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call them only after the
 event was fired
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.ScatterChart.OnMouseOver(WebSharper.Google.Visualization.ScatterChart)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.ScatterChart.OnMouseOut(WebSharper.Google.Visualization.ScatterChart)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.PieChart.Select(WebSharper.Google.Visualization.PieChart)">
<summary>
 Fired when the user clicks a point or legend. When a point is selected, the 
 corresponding cell in the data table is selected; when a legend is selected, 
 the corresponding column in the data table is selected. To learn what has 
 been selected, call getSelection().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.PieChart.Ready(WebSharper.Google.Visualization.PieChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call them only after the
 event was fired
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.PieChart.OnMouseOver(WebSharper.Google.Visualization.PieChart)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.PieChart.OnMouseOut(WebSharper.Google.Visualization.PieChart)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.LineChart.Select(WebSharper.Google.Visualization.LineChart)">
<summary>
 Fired when the user clicks a point or legend. When a point is selected, the 
 corresponding cell in the data table is selected; when a legend is selected, 
 the corresponding column in the data table is selected. To learn what has 
 been selected, call getSelection().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.LineChart.Ready(WebSharper.Google.Visualization.LineChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call them only after the
 event was fired
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.LineChart.OnMouseOver(WebSharper.Google.Visualization.LineChart)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.LineChart.OnMouseOut(WebSharper.Google.Visualization.LineChart)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.ColumnChart.Select(WebSharper.Google.Visualization.ColumnChart)">
<summary>
 Fired when the user clicks a point or legend. When a point is selected, the 
 corresponding cell in the data table is selected; when a legend is selected, 
 the corresponding column in the data table is selected. To learn what has 
 been selected, call getSelection().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.ColumnChart.Ready(WebSharper.Google.Visualization.ColumnChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call them only after the
 event was fired
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.ColumnChart.OnMouseOver(WebSharper.Google.Visualization.ColumnChart)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.ColumnChart.OnMouseOut(WebSharper.Google.Visualization.ColumnChart)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.BarChart.Select(WebSharper.Google.Visualization.BarChart)">
<summary>
 Fired when the user clicks a point or legend. When a point is selected, the 
 corresponding cell in the data table is selected; when a legend is selected, 
 the corresponding column in the data table is selected. To learn what has 
 been selected, call getSelection().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.BarChart.Ready(WebSharper.Google.Visualization.BarChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call them only after the
 event was fired
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.BarChart.OnMouseOver(WebSharper.Google.Visualization.BarChart)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.BarChart.OnMouseOut(WebSharper.Google.Visualization.BarChart)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Events.AreaChart.Select(WebSharper.Google.Visualization.AreaChart)">
<summary>
 Fired when the user clicks a point or legend. When a point is selected, the 
 corresponding cell in the data table is selected; when a legend is selected, 
 the corresponding column in the data table is selected. To learn what has 
 been selected, call getSelection().
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.AreaChart.Ready(WebSharper.Google.Visualization.AreaChart)">
<summary>
 The chart is ready for external method calls. If you want to interact with
 the chart, and call methods after you draw it, you should set up a listener
 for this event before you call the draw method, and call them only after the
 event was fired
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.AreaChart.OnMouseOver(WebSharper.Google.Visualization.AreaChart)">
<summary>
 Fired when the user mouses over a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Events.AreaChart.OnMouseOut(WebSharper.Google.Visualization.AreaChart)">
<summary>
 Fired when the user mouses away from a point, and passes in the row and column 
 indexes of the corresponding cell.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Events.RowColumnIndexes">
<summary>
 Wrapper for onmouse_ events args.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Events.Visualizations">

</member>
<member name="T:WebSharper.Google.Visualization.Events">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Formatters.PatternFormat.format``1(WebSharper.Google.Visualization.Base.DataTable,System.Int32[])">
<summary>
 The standard formatting call, with a few additional parameters:
 
     * dataTable - The DataTable on which to operate.
     * srcColumnIndices - An array of one or more (zero-based) column indices to pull
       as the sources from the underlying DataTable. This will be used as a data
       source for the pattern parameter in the constructor. The column numbers do not
       have to be in sorted order.
 
     * opt_dstColumnIndex - [optional] The destination column to place the output of
       the pattern manipulation. If not specified, the first element in
       srcColumIndices will be used as the destination.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.suffix">
<summary>
 A string suffix for the value, for example &quot;%&quot;.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.prefix">
<summary>
 A string prefix for the value, for example &quot;$&quot;.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.negativeParens">
<summary>
 A boolean, where true indicates that negative values should be surrounded
 by parentheses. Default is true.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.negativeColor">
<summary>
 The text color for negative values. No default value. Values can be any 
 acceptable HTML color value, such as &quot;red&quot; or &quot;#FF0000&quot;.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.groupingSymbol">
<summary>
 A character to be used to group digits to the left of the decimal into 
 sets of three. Default is a comma (,).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.fractionDigits">
<summary>
 A number specifying how many digits to display after the decimal. The 
 default is 2. If you specify more digits than the number contains, it 
 will display zeros for the smaller values. Truncated values will be 
 rounded (5 rounded up).
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.NumberFormatOptions.decimalSymbol">
<summary>
 A character to use as the decimal marker. The default is a dot (.).
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="F:WebSharper.Google.Visualization.Formatters.DateFormatOptions.timeZone">
<summary>
 The time zone in which to display the date value. This is a numeric value, indicating
 GMT + this number of time zones (can be negative). Date object are created by default
 with the assumed time zone of the computer on which they are created; this option is
 used to display that value in a different time zone. For example, if you created a
 Date object of 5pm noon on a computer located in Greenwich, England, and specified
 timeZone to be -5 (options[&apos;timeZone&apos;] = -5, or Eastern Pacific Time in the US), the
 value displayed would be 12 noon.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.DateFormatOptions.pattern">
<summary>
 A custom format pattern to apply to the value, similar to the ICU date and time
 format. For example: var formatter3 = new google.visualization.DateFormat({pattern:
 &quot;EEE, MMM d, &apos;&apos;yy&quot;}); You cannot specify both formatType and pattern. 
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.DateFormatOptions.formatType">
<summary>
 A quick formatting option for the date. The following string values are supported,
 reformatting the date February 28, 2008 as shown:
 
     * &apos;short&apos; - Short format: e.g., &quot;2/28/08&quot;
     * &apos;medium&apos; - Medium format: e.g., &quot;Feb 28, 2008&quot;
     * &apos;long&apos; - Long format: e.g., &quot;February 28, 2008&quot;
 You cannot specify both formatType and pattern.
 
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:WebSharper.Google.Visualization.Formatters.ColorFormat.addRange(System.Object,System.Object,System.String,System.String)">
<summary>
 Specifies a foreground color and/or background color to a cell, depending on the cell
 value. Any cell with a value in the specified from—to range (non-inclusive) will be
 assigned color and bgcolor. It is important to realize that the range is
 non-inclusive, because creating a range from 1—1,000 and a second from 1,000—2,000
 will not cover the value 1,000!
 
     * from - [String, Number, Date, DateTime, or TimeOfDay] The lower boundary
       (non-inclusive) of the range, or null. If null, it will match -∞. String
       boundaries are compared alphabetically against string values.
     * to - [String, Number, Date, DateTime, or TimeOfDay] The high boundary
       (non-inclusive) of the range, or null. If null, it will match +∞. String
       boundaries are compared alphabetically against string values.
     * color - The color to apply to text in matching cells. Values can be either
       &apos;#RRGGBB&apos; values or defined color constants, (example: &apos;#FF0000&apos; or &apos;red&apos;).
     * bgcolor - The color to apply to the background of matching cells. Values can be
       either &apos;#RRGGBB&apos; values or defined color constants, (example: &apos;#FF0000&apos; or
       &apos;red&apos;).
</summary>
</member>
<member name="M:WebSharper.Google.Visualization.Formatters.ColorFormat.addGradientRange(System.Object,System.Object,System.String,System.String,System.String)">
<summary>
 Assigns a background color from a range, according to the cell value. The color is
 scaled to match the cell&apos;s value within a range from a lower boundary color to an
 upper boundary color. Note that this method cannot compare string values, as
 addRange() can. Tip: Color ranges are often hard for viewers to gauge accurately; the
 simplest and easiest to read range is from a fully saturated color to white (e.g.,
 #FF0000—FFFFFF).
 
     * from - [Number, Date, DateTime, or TimeOfDay] The lower boundary
       (non-inclusive) of the range, or null. If null, it will match -∞.
     * to - [Number, Date, DateTime, or TimeOfDay] The higher boundary (non-inclusive)
       of the range, or null. If null, it will match +∞.
     * color - The color to apply to text in matching cells. This color is the same
       for all cells, no matter what their value.
     * fromBgColor - The background color for cells holding values at the low end of
       the gradient. Values can be either &apos;#RRGGBB&apos; values or defined color constants,
       (example: &apos;#FF0000&apos; or &apos;red&apos;).
     * toBgColor - The background color for cells holding values at the high end of
       the gradient. Values can be either &apos;#RRGGBB&apos; values or defined color constants,
       (example: &apos;#FF0000&apos; or &apos;red&apos;).
</summary>
</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Formatters.ColorFormat">
<summary>
 Assigns colors to the foreground or background of a numeric cell, depending
 on the cell value. This formatter is an unusual, in that it doesn&apos;t take
 its options in the constructor. Instead, you should call addRange() or 
 addGradientRange() as many times as you want, to add color ranges, before 
 calling format(). Colors can be specified in any acceptable HTML format, 
 for example &quot;black&quot;, &quot;#000000&quot;, or &quot;#000&quot;.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Formatters.BarFormat">
<summary>
 Adds a colored bar to a numeric cell indicating whether the cell value
 is above or below a specified base value.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.width">
<summary>
 Thickness of each bar, in pixels. Default value is 100.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.showValue">
<summary>
 If true, shows values and bars; if false, shows only bars. Default value is true.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.min">
<summary>
 The minimum number value for the bar range. Default value is the lowest value in the
 table.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.max">
<summary>
 The maximum number value for the bar range. Default value is the highest value in the
 table.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.drawZeroLine">
<summary>
 A boolean indicating if to draw a 1 pixel dark base line when negative values are
 present. The dark line is there to enhance visual scanning of the bars. Default value
 is &apos;false&apos;.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.colorPositive">
<summary>
 A string indicating the color of the positive value section of bars. Possible values
 are &apos;red&apos;, &apos;green&apos; and &apos;blue&apos;. Default is &apos;blue&apos;.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.colorNegative">
<summary>
 A string indicating the negative value section of bars. Possible values are &apos;red&apos;,
 &apos;green&apos; and &apos;blue&apos;; default value is &apos;red&apos;.
</summary>
</member>
<member name="F:WebSharper.Google.Visualization.Formatters.BarFormatOptions.base">
<summary>
 A number that is the base value to compare the cell value against. If the cell value
 is higher, it will be drawn to the right of the base; if lower, it will be drawn to
 the left. Default value is 0.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:WebSharper.Google.Visualization.Other">
<summary>
 Other regions supported by the GeoMap
</summary>
</member>
</members>
</doc>
