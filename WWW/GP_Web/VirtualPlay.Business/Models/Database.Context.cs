//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VirtualPlay.Business.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Ent_Address> Ent_Address { get; set; }
        public virtual DbSet<Ent_Document> Ent_Document { get; set; }
        public virtual DbSet<Ent_DocumentType> Ent_DocumentType { get; set; }
        public virtual DbSet<Ent_Enterprise> Ent_Enterprise { get; set; }
        public virtual DbSet<Ent_Telephone> Ent_Telephone { get; set; }
        public virtual DbSet<Pay_Transaction> Pay_Transaction { get; set; }
        public virtual DbSet<Pay_TransactionSignature> Pay_TransactionSignature { get; set; }
        public virtual DbSet<Per_Address> Per_Address { get; set; }
        public virtual DbSet<Per_Document> Per_Document { get; set; }
        public virtual DbSet<Per_DocumentType> Per_DocumentType { get; set; }
        public virtual DbSet<Per_Person> Per_Person { get; set; }
        public virtual DbSet<Per_Telephone> Per_Telephone { get; set; }
        public virtual DbSet<Pos_PinPad> Pos_PinPad { get; set; }
        public virtual DbSet<Sys_Access> Sys_Access { get; set; }
        public virtual DbSet<Sys_File> Sys_File { get; set; }
        public virtual DbSet<Sys_ForgotPassword> Sys_ForgotPassword { get; set; }
        public virtual DbSet<Sys_Merchant> Sys_Merchant { get; set; }
        public virtual DbSet<Sys_MerchantPinPad> Sys_MerchantPinPad { get; set; }
        public virtual DbSet<Sys_Module> Sys_Module { get; set; }
        public virtual DbSet<Sys_Role> Sys_Role { get; set; }
        public virtual DbSet<Sys_SmsLog> Sys_SmsLog { get; set; }
        public virtual DbSet<Sys_System> Sys_System { get; set; }
        public virtual DbSet<Sys_SystemType> Sys_SystemType { get; set; }
        public virtual DbSet<Sys_User> Sys_User { get; set; }
        public virtual DbSet<Sys_UserLoginHistory> Sys_UserLoginHistory { get; set; }
        public virtual DbSet<Sys_UserPasswordHistory> Sys_UserPasswordHistory { get; set; }
        public virtual DbSet<Sys_UserSystem> Sys_UserSystem { get; set; }
        public virtual DbSet<Sys_WebmailConf> Sys_WebmailConf { get; set; }
        public virtual DbSet<Sys_WebmailLog> Sys_WebmailLog { get; set; }
        public virtual DbSet<Sys_UserSession> Sys_UserSession { get; set; }
        public virtual DbSet<Pay_CashReceipt> Pay_CashReceipt { get; set; }
        public virtual DbSet<Pay_Rate> Pay_Rate { get; set; }
        public virtual DbSet<Pay_RateItems> Pay_RateItems { get; set; }
        public virtual DbSet<Sys_MerchantReceipt> Sys_MerchantReceipt { get; set; }
    
        public virtual ObjectResult<Pay_TransactionChartCardBrand_Result> Pay_TransactionChartCardBrand(Nullable<int> idMerchant, Nullable<int> idYear, Nullable<int> idMonth, Nullable<int> idDay)
        {
            var idMerchantParameter = idMerchant.HasValue ?
                new ObjectParameter("idMerchant", idMerchant) :
                new ObjectParameter("idMerchant", typeof(int));
    
            var idYearParameter = idYear.HasValue ?
                new ObjectParameter("idYear", idYear) :
                new ObjectParameter("idYear", typeof(int));
    
            var idMonthParameter = idMonth.HasValue ?
                new ObjectParameter("idMonth", idMonth) :
                new ObjectParameter("idMonth", typeof(int));
    
            var idDayParameter = idDay.HasValue ?
                new ObjectParameter("idDay", idDay) :
                new ObjectParameter("idDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pay_TransactionChartCardBrand_Result>("Pay_TransactionChartCardBrand", idMerchantParameter, idYearParameter, idMonthParameter, idDayParameter);
        }
    
        public virtual ObjectResult<Pay_TransactionChartInstallment_Result> Pay_TransactionChartInstallment(Nullable<int> idMerchant, Nullable<int> idYear, Nullable<int> idMonth, Nullable<int> idDay)
        {
            var idMerchantParameter = idMerchant.HasValue ?
                new ObjectParameter("idMerchant", idMerchant) :
                new ObjectParameter("idMerchant", typeof(int));
    
            var idYearParameter = idYear.HasValue ?
                new ObjectParameter("idYear", idYear) :
                new ObjectParameter("idYear", typeof(int));
    
            var idMonthParameter = idMonth.HasValue ?
                new ObjectParameter("idMonth", idMonth) :
                new ObjectParameter("idMonth", typeof(int));
    
            var idDayParameter = idDay.HasValue ?
                new ObjectParameter("idDay", idDay) :
                new ObjectParameter("idDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pay_TransactionChartInstallment_Result>("Pay_TransactionChartInstallment", idMerchantParameter, idYearParameter, idMonthParameter, idDayParameter);
        }
    
        public virtual ObjectResult<Pay_TransactionChartOperation_Result> Pay_TransactionChartOperation(Nullable<int> idMerchant, Nullable<int> idYear, Nullable<int> idMonth, Nullable<int> idDay)
        {
            var idMerchantParameter = idMerchant.HasValue ?
                new ObjectParameter("idMerchant", idMerchant) :
                new ObjectParameter("idMerchant", typeof(int));
    
            var idYearParameter = idYear.HasValue ?
                new ObjectParameter("idYear", idYear) :
                new ObjectParameter("idYear", typeof(int));
    
            var idMonthParameter = idMonth.HasValue ?
                new ObjectParameter("idMonth", idMonth) :
                new ObjectParameter("idMonth", typeof(int));
    
            var idDayParameter = idDay.HasValue ?
                new ObjectParameter("idDay", idDay) :
                new ObjectParameter("idDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pay_TransactionChartOperation_Result>("Pay_TransactionChartOperation", idMerchantParameter, idYearParameter, idMonthParameter, idDayParameter);
        }
    
        public virtual int Sys_SmsLogInsert(string nbSmsTo, string dsError, string dsMessage, string dsExtra, Nullable<bool> flSent, Nullable<int> idSystem, Nullable<int> idUserCreate)
        {
            var nbSmsToParameter = nbSmsTo != null ?
                new ObjectParameter("nbSmsTo", nbSmsTo) :
                new ObjectParameter("nbSmsTo", typeof(string));
    
            var dsErrorParameter = dsError != null ?
                new ObjectParameter("dsError", dsError) :
                new ObjectParameter("dsError", typeof(string));
    
            var dsMessageParameter = dsMessage != null ?
                new ObjectParameter("dsMessage", dsMessage) :
                new ObjectParameter("dsMessage", typeof(string));
    
            var dsExtraParameter = dsExtra != null ?
                new ObjectParameter("dsExtra", dsExtra) :
                new ObjectParameter("dsExtra", typeof(string));
    
            var flSentParameter = flSent.HasValue ?
                new ObjectParameter("flSent", flSent) :
                new ObjectParameter("flSent", typeof(bool));
    
            var idSystemParameter = idSystem.HasValue ?
                new ObjectParameter("idSystem", idSystem) :
                new ObjectParameter("idSystem", typeof(int));
    
            var idUserCreateParameter = idUserCreate.HasValue ?
                new ObjectParameter("idUserCreate", idUserCreate) :
                new ObjectParameter("idUserCreate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sys_SmsLogInsert", nbSmsToParameter, dsErrorParameter, dsMessageParameter, dsExtraParameter, flSentParameter, idSystemParameter, idUserCreateParameter);
        }
    
        public virtual ObjectResult<Sys_UserLogin_Result> Sys_UserLogin(string dsEmail, string dsPassword, Nullable<int> idSystem, string dsIpAddress, string dsAgent, string dsAccessToken, string dsSession)
        {
            var dsEmailParameter = dsEmail != null ?
                new ObjectParameter("dsEmail", dsEmail) :
                new ObjectParameter("dsEmail", typeof(string));
    
            var dsPasswordParameter = dsPassword != null ?
                new ObjectParameter("dsPassword", dsPassword) :
                new ObjectParameter("dsPassword", typeof(string));
    
            var idSystemParameter = idSystem.HasValue ?
                new ObjectParameter("idSystem", idSystem) :
                new ObjectParameter("idSystem", typeof(int));
    
            var dsIpAddressParameter = dsIpAddress != null ?
                new ObjectParameter("dsIpAddress", dsIpAddress) :
                new ObjectParameter("dsIpAddress", typeof(string));
    
            var dsAgentParameter = dsAgent != null ?
                new ObjectParameter("dsAgent", dsAgent) :
                new ObjectParameter("dsAgent", typeof(string));
    
            var dsAccessTokenParameter = dsAccessToken != null ?
                new ObjectParameter("dsAccessToken", dsAccessToken) :
                new ObjectParameter("dsAccessToken", typeof(string));
    
            var dsSessionParameter = dsSession != null ?
                new ObjectParameter("dsSession", dsSession) :
                new ObjectParameter("dsSession", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sys_UserLogin_Result>("Sys_UserLogin", dsEmailParameter, dsPasswordParameter, idSystemParameter, dsIpAddressParameter, dsAgentParameter, dsAccessTokenParameter, dsSessionParameter);
        }
    
        public virtual ObjectResult<Sys_WebmailConfSelect_Result> Sys_WebmailConfSelect(Nullable<int> idWebMail, Nullable<int> idSequence, Nullable<bool> flMenorSequence)
        {
            var idWebMailParameter = idWebMail.HasValue ?
                new ObjectParameter("idWebMail", idWebMail) :
                new ObjectParameter("idWebMail", typeof(int));
    
            var idSequenceParameter = idSequence.HasValue ?
                new ObjectParameter("idSequence", idSequence) :
                new ObjectParameter("idSequence", typeof(int));
    
            var flMenorSequenceParameter = flMenorSequence.HasValue ?
                new ObjectParameter("flMenorSequence", flMenorSequence) :
                new ObjectParameter("flMenorSequence", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sys_WebmailConfSelect_Result>("Sys_WebmailConfSelect", idWebMailParameter, idSequenceParameter, flMenorSequenceParameter);
        }
    
        public virtual int Sys_WebmailConfUpdate(Nullable<int> idWebMail, Nullable<int> idSequence)
        {
            var idWebMailParameter = idWebMail.HasValue ?
                new ObjectParameter("idWebMail", idWebMail) :
                new ObjectParameter("idWebMail", typeof(int));
    
            var idSequenceParameter = idSequence.HasValue ?
                new ObjectParameter("idSequence", idSequence) :
                new ObjectParameter("idSequence", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sys_WebmailConfUpdate", idWebMailParameter, idSequenceParameter);
        }
    
        public virtual int Sys_WebmailLogInsert(Nullable<int> idWebmail, Nullable<int> idSequence, Nullable<int> idSystem, string dsMailTo, string dsError, string dsSubject, string dsMessage, string dsExtra, string cdTemplate, string cdIdentification1, string cdIdentification2, string cdIdentification3, Nullable<bool> flSent, Nullable<int> idUserCreate)
        {
            var idWebmailParameter = idWebmail.HasValue ?
                new ObjectParameter("idWebmail", idWebmail) :
                new ObjectParameter("idWebmail", typeof(int));
    
            var idSequenceParameter = idSequence.HasValue ?
                new ObjectParameter("idSequence", idSequence) :
                new ObjectParameter("idSequence", typeof(int));
    
            var idSystemParameter = idSystem.HasValue ?
                new ObjectParameter("idSystem", idSystem) :
                new ObjectParameter("idSystem", typeof(int));
    
            var dsMailToParameter = dsMailTo != null ?
                new ObjectParameter("dsMailTo", dsMailTo) :
                new ObjectParameter("dsMailTo", typeof(string));
    
            var dsErrorParameter = dsError != null ?
                new ObjectParameter("dsError", dsError) :
                new ObjectParameter("dsError", typeof(string));
    
            var dsSubjectParameter = dsSubject != null ?
                new ObjectParameter("dsSubject", dsSubject) :
                new ObjectParameter("dsSubject", typeof(string));
    
            var dsMessageParameter = dsMessage != null ?
                new ObjectParameter("dsMessage", dsMessage) :
                new ObjectParameter("dsMessage", typeof(string));
    
            var dsExtraParameter = dsExtra != null ?
                new ObjectParameter("dsExtra", dsExtra) :
                new ObjectParameter("dsExtra", typeof(string));
    
            var cdTemplateParameter = cdTemplate != null ?
                new ObjectParameter("cdTemplate", cdTemplate) :
                new ObjectParameter("cdTemplate", typeof(string));
    
            var cdIdentification1Parameter = cdIdentification1 != null ?
                new ObjectParameter("cdIdentification1", cdIdentification1) :
                new ObjectParameter("cdIdentification1", typeof(string));
    
            var cdIdentification2Parameter = cdIdentification2 != null ?
                new ObjectParameter("cdIdentification2", cdIdentification2) :
                new ObjectParameter("cdIdentification2", typeof(string));
    
            var cdIdentification3Parameter = cdIdentification3 != null ?
                new ObjectParameter("cdIdentification3", cdIdentification3) :
                new ObjectParameter("cdIdentification3", typeof(string));
    
            var flSentParameter = flSent.HasValue ?
                new ObjectParameter("flSent", flSent) :
                new ObjectParameter("flSent", typeof(bool));
    
            var idUserCreateParameter = idUserCreate.HasValue ?
                new ObjectParameter("idUserCreate", idUserCreate) :
                new ObjectParameter("idUserCreate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sys_WebmailLogInsert", idWebmailParameter, idSequenceParameter, idSystemParameter, dsMailToParameter, dsErrorParameter, dsSubjectParameter, dsMessageParameter, dsExtraParameter, cdTemplateParameter, cdIdentification1Parameter, cdIdentification2Parameter, cdIdentification3Parameter, flSentParameter, idUserCreateParameter);
        }
    
        public virtual ObjectResult<Pay_TransactionChartSale_Result> Pay_TransactionChartSale(Nullable<int> idMerchant, Nullable<int> idYear, Nullable<int> idMonth, Nullable<int> idDay)
        {
            var idMerchantParameter = idMerchant.HasValue ?
                new ObjectParameter("idMerchant", idMerchant) :
                new ObjectParameter("idMerchant", typeof(int));
    
            var idYearParameter = idYear.HasValue ?
                new ObjectParameter("idYear", idYear) :
                new ObjectParameter("idYear", typeof(int));
    
            var idMonthParameter = idMonth.HasValue ?
                new ObjectParameter("idMonth", idMonth) :
                new ObjectParameter("idMonth", typeof(int));
    
            var idDayParameter = idDay.HasValue ?
                new ObjectParameter("idDay", idDay) :
                new ObjectParameter("idDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pay_TransactionChartSale_Result>("Pay_TransactionChartSale", idMerchantParameter, idYearParameter, idMonthParameter, idDayParameter);
        }
    
        public virtual ObjectResult<Pay_TransactionChartRefund_Result> Pay_TransactionChartRefund(Nullable<int> idMerchant, Nullable<int> idYear, Nullable<int> idMonth, Nullable<int> idDay)
        {
            var idMerchantParameter = idMerchant.HasValue ?
                new ObjectParameter("idMerchant", idMerchant) :
                new ObjectParameter("idMerchant", typeof(int));
    
            var idYearParameter = idYear.HasValue ?
                new ObjectParameter("idYear", idYear) :
                new ObjectParameter("idYear", typeof(int));
    
            var idMonthParameter = idMonth.HasValue ?
                new ObjectParameter("idMonth", idMonth) :
                new ObjectParameter("idMonth", typeof(int));
    
            var idDayParameter = idDay.HasValue ?
                new ObjectParameter("idDay", idDay) :
                new ObjectParameter("idDay", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Pay_TransactionChartRefund_Result>("Pay_TransactionChartRefund", idMerchantParameter, idYearParameter, idMonthParameter, idDayParameter);
        }
    }
}
